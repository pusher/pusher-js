{"version":3,"sources":["webpack://Pusher/webpack/bootstrap","webpack://Pusher/./node_modules/@stablelib/base64/base64.ts","webpack://Pusher/./node_modules/@stablelib/utf8/utf8.ts","webpack://Pusher/./src/core/pusher.js","webpack://Pusher/./src/core/base64.ts","webpack://Pusher/./src/core/utils/timers/abstract_timer.ts","webpack://Pusher/./src/core/utils/timers/index.ts","webpack://Pusher/./src/core/util.ts","webpack://Pusher/./src/core/utils/collections.ts","webpack://Pusher/./src/core/defaults.ts","webpack://Pusher/./src/core/transports/url_schemes.ts","webpack://Pusher/./src/core/events/callback_registry.ts","webpack://Pusher/./src/core/events/dispatcher.ts","webpack://Pusher/./src/core/logger.ts","webpack://Pusher/./src/core/transports/transport_connection.ts","webpack://Pusher/./src/core/transports/transport.ts","webpack://Pusher/./src/runtimes/isomorphic/transports/transports.ts","webpack://Pusher/./src/core/transports/assistant_to_the_transport_manager.ts","webpack://Pusher/./src/core/connection/protocol/protocol.ts","webpack://Pusher/./src/core/connection/connection.ts","webpack://Pusher/./src/core/connection/handshake/index.ts","webpack://Pusher/./src/core/timeline/timeline_sender.ts","webpack://Pusher/./src/core/errors.ts","webpack://Pusher/./src/core/utils/url_store.ts","webpack://Pusher/./src/core/channels/channel.ts","webpack://Pusher/./src/core/channels/private_channel.ts","webpack://Pusher/./src/core/channels/members.ts","webpack://Pusher/./src/core/channels/presence_channel.ts","webpack://Pusher/./src/core/channels/encrypted_channel.ts","webpack://Pusher/./src/core/connection/connection_manager.ts","webpack://Pusher/./src/core/channels/channels.ts","webpack://Pusher/./src/core/utils/factory.ts","webpack://Pusher/./src/core/transports/transport_manager.ts","webpack://Pusher/./src/core/strategies/sequential_strategy.ts","webpack://Pusher/./src/core/strategies/best_connected_ever_strategy.ts","webpack://Pusher/./src/core/strategies/cached_strategy.ts","webpack://Pusher/./src/core/strategies/delayed_strategy.ts","webpack://Pusher/./src/core/strategies/if_strategy.ts","webpack://Pusher/./src/core/strategies/first_connected_strategy.ts","webpack://Pusher/./src/runtimes/isomorphic/default_strategy.ts","webpack://Pusher/./src/core/http/state.ts","webpack://Pusher/./src/core/http/http_request.ts","webpack://Pusher/./src/core/http/http_socket.ts","webpack://Pusher/./src/core/timeline/level.ts","webpack://Pusher/./src/core/http/http_streaming_socket.ts","webpack://Pusher/./src/core/http/http_polling_socket.ts","webpack://Pusher/./src/runtimes/isomorphic/http/http_xhr_request.ts","webpack://Pusher/./src/runtimes/isomorphic/runtime.ts","webpack://Pusher/./src/runtimes/isomorphic/transports/transport_connection_initializer.ts","webpack://Pusher/./src/runtimes/isomorphic/http/http.ts","webpack://Pusher/./src/runtimes/worker/net_info.ts","webpack://Pusher/./src/runtimes/worker/auth/fetch_auth.ts","webpack://Pusher/./src/runtimes/worker/runtime.ts","webpack://Pusher/./src/runtimes/worker/timeline/fetch_timeline.ts","webpack://Pusher/./src/core/timeline/timeline.ts","webpack://Pusher/./src/core/strategies/transport_strategy.ts","webpack://Pusher/./src/core/strategies/strategy_builder.ts","webpack://Pusher/./src/core/auth/user_authenticator.ts","webpack://Pusher/./src/core/auth/channel_authorizer.ts","webpack://Pusher/./src/core/config.ts","webpack://Pusher/./src/core/auth/deprecated_channel_authorizer.ts","webpack://Pusher/./src/core/pusher.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_paddingCharacter","encodedLength","length","this","encode","data","out","_encodeByte","left","maxDecodedLength","decodedLength","_getPaddingLength","decode","Uint8Array","paddingLength","op","haveBad","v0","v1","v2","v3","_decodeChar","charCodeAt","Error","b","result","String","fromCharCode","Coder","stdCoder","URLSafeCoder","urlSafeCoder","INVALID_UTF8","arr","pos","chars","min","n1","n2","n3","push","join","default","b64chars","b64tab","charAt","cb_utob","cc","utob","u","replace","cb_encode","ccc","padlen","ord","btoa","set","clear","delay","callback","timer","isRunning","ensureAborted","clearTimeout","clearInterval","setTimeout","setInterval","now","Date","valueOf","defer","OneOffTimer","method","boundArguments","Array","slice","arguments","apply","concat","extend","target","sources","extensions","constructor","stringify","safeJSONStringify","arrayIndexOf","array","item","nativeIndexOf","indexOf","objectApply","f","keys","_","context","map","filter","test","filterObject","Boolean","any","encodeParamsObject","encodeURIComponent","toString","buildQueryString","params","undefined","source","JSON","e","objects","paths","derez","path","nu","$ref","VERSION","PROTOCOL","wsPort","wssPort","wsPath","httpHost","httpPort","httpsPort","httpPath","stats_host","authEndpoint","authTransport","activityTimeout","pongTimeout","unavailableTimeout","cluster","userAuthentication","endpoint","transport","cdn_http","cdn_https","dependency_suffix","getGenericURL","baseScheme","useTLS","hostTLS","hostNonTLS","getGenericPath","queryString","ws","getInitial","http","_callbacks","prefix","add","prefixedEventName","fn","remove","names","removeCallback","removeAllCallbacks","binding","failThrough","callbacks","global_callbacks","eventName","bind_global","unbind","unbind_global","unbind_all","emit","metadata","args","globalLog","message","console","log","debug","warn","globalLogWarn","error","globalLogError","defaultLoggingFunction","logToConsole","hooks","priority","options","initialize","transportConnectionInitializer","state","timeline","id","generateUniqueID","handlesActivityChecks","supportsPing","connect","socket","url","urls","getSocket","onError","changeState","bindListeners","close","send","ping","onOpen","beforeOpen","getPath","onopen","type","buildTimelineMessage","onClose","closeEvent","code","reason","wasClean","unbindListeners","onMessage","onActivity","onerror","onclose","onmessage","onactivity","info","cid","isSupported","environment","createConnection","WSTransport","isInitialized","getWebSocketAPI","createWebSocket","httpConfiguration","streamingConfiguration","HTTPFactory","createStreamingSocket","pollingConfiguration","createPollingSocket","xhrConfiguration","isXHRSupported","xhr_streaming","xhr_polling","manager","minPingDelay","maxPingDelay","pingDelay","connection","openTimestamp","onClosed","reportDeath","lifespan","Math","max","isAlive","Protocol","decodeMessage","messageEvent","messageData","parse","pusherEventData","pusherEvent","event","channel","user_id","encodeMessage","processHandshake","activity_timeout","action","socket_id","getCloseAction","getCloseError","send_event","listeners","activity","closed","handleCloseEvent","listener","finish","isEmpty","TimelineTransport","getAgent","msg","setPrototypeOf","status","urlStore","baseUrl","authenticationEndpoint","javascriptQuickStart","triggeringClientEvents","encryptedChannelSupport","fullUrl","urlObj","urlPrefix","pusher","subscribed","subscriptionPending","subscriptionCancelled","authorize","socketId","auth","trigger","suffix","disconnect","handleEvent","handleSubscriptionSucceededEvent","unsubscribe","subscribe","assign","HTTPAuthError","channel_data","cancelSubscription","reinstateSubscription","config","channelAuthorizer","channelName","reset","members","each","member","setMyID","myID","onSubscription","subscriptionData","presence","hash","count","me","addMember","memberData","user_info","removeMember","authData","channelData","handleInternalEvent","addedMember","removedMember","nacl","sharedSecret","handleEncryptedEvent","ciphertext","nonce","cipherText","secretbox","overheadLength","nonceLength","bytes","open","getDataToEmit","raw","usingTLS","errorCallbacks","buildErrorCallbacks","connectionCallbacks","buildConnectionCallbacks","handshakeCallbacks","buildHandshakeCallbacks","Network","getNetwork","netinfo","retryIn","sendActivityCheck","updateStrategy","runner","strategy","updateState","startConnecting","setUnavailableTimer","disconnectInternally","isUsingTLS","handshake","handshakeError","abortConnecting","abort","clearRetryTimer","clearUnavailableTimer","abandonConnection","getStrategy","round","retryTimer","unavailableTimer","stopActivityCheck","activityTimer","pong_timed_out","resetActivityCheck","shouldRetry","connected","Infinity","setConnection","withErrorEmitted","tls_only","refused","backoff","retry","newState","previousState","newStateDescription","previous","current","channels","createEncryptedChannel","errMsg","createPrivateChannel","createPresenceChannel","createChannel","all","values","find","createChannels","createConnectionManager","createTimelineSender","createHandshake","createAssistantToTheTransportManager","livesLeft","lives","getAssistant","strategies","loop","failFast","timeout","timeoutLimit","minPriority","tryNextStrategy","tryStrategy","forceMinPriority","callbackBuilder","runners","rs","abortRunner","allRunnersFailed","aborted","transports","ttl","storage","getLocalStorage","serializedCache","getTransportCacheKey","flushTransportCache","fetchTransportCache","timestamp","cached","latency","startTimestamp","pop","cb","storeTransportCache","number","trueBranch","falseBranch","testSupportsStrategy","State","baseOptions","defineTransport","definedTransports","defineTransportStrategy","wsStrategy","ws_options","wsHost","wss_options","http_options","timeouts","ws_manager","streaming_manager","ws_transport","wss_transport","xhr_streaming_transport","xhr_polling_transport","ws_loop","wss_loop","streaming_loop","polling_loop","http_loop","start","payload","position","xhr","getRequest","unloader","addUnloadListener","setRequestHeader","removeUnloadListener","abortRequest","onChunk","chunk","advanceBuffer","isBufferTooLong","buffer","unreadData","endOfLinePosition","autoIncrement","getUniqueURL","separator","randomNumber","floor","random","TimelineLevel","session","randomString","location","parts","exec","base","getLocation","readyState","CONNECTING","openStream","sendRaw","sendHeartbeat","OPEN","createSocketRequest","reconnect","closeStream","CLOSED","onEvent","onHeartbeat","hostname","urlParts","stream","getReceiveURL","onFinished","getXHRAPI","onreadystatechange","onprogress","responseText","getDefaultStrategy","Transports","createSocket","createXHR","createRequest","setup","PusherClass","ready","getClientFeatures","getProtocol","isOnline","query","authOptions","headers","Headers","headerName","body","request","Request","credentials","fetch","then","response","text","parsedData","err","sender","host","json","getAuthorizers","ajax","WebSocket","XMLHttpRequest","events","sent","uniqueID","level","limit","shift","ERROR","INFO","DEBUG","sendfn","bundle","lib","version","features","failAttempt","onInitialized","serializedTransport","transportClass","enabledTransports","disabledTransports","ignoreNullOrigin","deferred","composeChannelQuery","getHttpHost","opts","getWebsocketHost","getWebsocketHostFromCluster","shouldUseTLS","forceTLS","getEnableStatsConfig","enableStats","disableStats","buildUserAuthenticator","buildChannelAuthorizer","channelAuthorization","customHandler","channelAuthorizerGenerator","deprecatedAuthorizerOptions","ChannelAuthorizerProxy","authorizer","buildChannelAuth","app_key","signin_requested","checkAppKey","statsHost","userAuthenticator","timelineParams","global_emitter","sessionID","Pusher","timelineSender","subscribeAll","_signin","user","user_data","internal","instances","isReady","allChannels","timelineSenderTimer","PeriodicTimer","event_name","channel_name","signin","Runtime","ScriptReceivers","DependenciesReceivers","auth_callbacks"],"mappings":"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","file":"pusher.worker.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package base64 implements Base64 encoding and decoding.\n */\n\n// Invalid character used in decoding to indicate\n// that the character to decode is out of range of\n// alphabet and cannot be decoded.\nconst INVALID_BYTE = 256;\n\n/**\n * Implements standard Base64 encoding.\n *\n * Operates in constant time.\n */\nexport class Coder {\n    // TODO(dchest): methods to encode chunk-by-chunk.\n\n    constructor(private _paddingCharacter = \"=\") { }\n\n    encodedLength(length: number): number {\n        if (!this._paddingCharacter) {\n            return (length * 8 + 5) / 6 | 0;\n        }\n        return (length + 2) / 3 * 4 | 0;\n    }\n\n    encode(data: Uint8Array): string {\n        let out = \"\";\n\n        let i = 0;\n        for (; i < data.length - 2; i += 3) {\n            let c = (data[i] << 16) | (data[i + 1] << 8) | (data[i + 2]);\n            out += this._encodeByte((c >>> 3 * 6) & 63);\n            out += this._encodeByte((c >>> 2 * 6) & 63);\n            out += this._encodeByte((c >>> 1 * 6) & 63);\n            out += this._encodeByte((c >>> 0 * 6) & 63);\n        }\n\n        const left = data.length - i;\n        if (left > 0) {\n            let c = (data[i] << 16) | (left === 2 ? data[i + 1] << 8 : 0);\n            out += this._encodeByte((c >>> 3 * 6) & 63);\n            out += this._encodeByte((c >>> 2 * 6) & 63);\n            if (left === 2) {\n                out += this._encodeByte((c >>> 1 * 6) & 63);\n            } else {\n                out += this._paddingCharacter || \"\";\n            }\n            out += this._paddingCharacter || \"\";\n        }\n\n        return out;\n    }\n\n    maxDecodedLength(length: number): number {\n        if (!this._paddingCharacter) {\n            return (length * 6 + 7) / 8 | 0;\n        }\n        return length / 4 * 3 | 0;\n    }\n\n    decodedLength(s: string): number {\n        return this.maxDecodedLength(s.length - this._getPaddingLength(s));\n    }\n\n    decode(s: string): Uint8Array {\n        if (s.length === 0) {\n            return new Uint8Array(0);\n        }\n        const paddingLength = this._getPaddingLength(s);\n        const length = s.length - paddingLength;\n        const out = new Uint8Array(this.maxDecodedLength(length));\n        let op = 0;\n        let i = 0;\n        let haveBad = 0;\n        let v0 = 0, v1 = 0, v2 = 0, v3 = 0;\n        for (; i < length - 4; i += 4) {\n            v0 = this._decodeChar(s.charCodeAt(i + 0));\n            v1 = this._decodeChar(s.charCodeAt(i + 1));\n            v2 = this._decodeChar(s.charCodeAt(i + 2));\n            v3 = this._decodeChar(s.charCodeAt(i + 3));\n            out[op++] = (v0 << 2) | (v1 >>> 4);\n            out[op++] = (v1 << 4) | (v2 >>> 2);\n            out[op++] = (v2 << 6) | v3;\n            haveBad |= v0 & INVALID_BYTE;\n            haveBad |= v1 & INVALID_BYTE;\n            haveBad |= v2 & INVALID_BYTE;\n            haveBad |= v3 & INVALID_BYTE;\n        }\n        if (i < length - 1) {\n            v0 = this._decodeChar(s.charCodeAt(i));\n            v1 = this._decodeChar(s.charCodeAt(i + 1));\n            out[op++] = (v0 << 2) | (v1 >>> 4);\n            haveBad |= v0 & INVALID_BYTE;\n            haveBad |= v1 & INVALID_BYTE;\n        }\n        if (i < length - 2) {\n            v2 = this._decodeChar(s.charCodeAt(i + 2));\n            out[op++] = (v1 << 4) | (v2 >>> 2);\n            haveBad |= v2 & INVALID_BYTE;\n        }\n        if (i < length - 3) {\n            v3 = this._decodeChar(s.charCodeAt(i + 3));\n            out[op++] = (v2 << 6) | v3;\n            haveBad |= v3 & INVALID_BYTE;\n        }\n        if (haveBad !== 0) {\n            throw new Error(\"Base64Coder: incorrect characters for decoding\");\n        }\n        return out;\n    }\n\n    // Standard encoding have the following encoded/decoded ranges,\n    // which we need to convert between.\n    //\n    // ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz 0123456789  +   /\n    // Index:   0 - 25                    26 - 51              52 - 61   62  63\n    // ASCII:  65 - 90                    97 - 122             48 - 57   43  47\n    //\n\n    // Encode 6 bits in b into a new character.\n    protected _encodeByte(b: number): string {\n        // Encoding uses constant time operations as follows:\n        //\n        // 1. Define comparison of A with B using (A - B) >>> 8:\n        //          if A > B, then result is positive integer\n        //          if A <= B, then result is 0\n        //\n        // 2. Define selection of C or 0 using bitwise AND: X & C:\n        //          if X == 0, then result is 0\n        //          if X != 0, then result is C\n        //\n        // 3. Start with the smallest comparison (b >= 0), which is always\n        //    true, so set the result to the starting ASCII value (65).\n        //\n        // 4. Continue comparing b to higher ASCII values, and selecting\n        //    zero if comparison isn't true, otherwise selecting a value\n        //    to add to result, which:\n        //\n        //          a) undoes the previous addition\n        //          b) provides new value to add\n        //\n        let result = b;\n        // b >= 0\n        result += 65;\n        // b > 25\n        result += ((25 - b) >>> 8) & ((0 - 65) - 26 + 97);\n        // b > 51\n        result += ((51 - b) >>> 8) & ((26 - 97) - 52 + 48);\n        // b > 61\n        result += ((61 - b) >>> 8) & ((52 - 48) - 62 + 43);\n        // b > 62\n        result += ((62 - b) >>> 8) & ((62 - 43) - 63 + 47);\n\n        return String.fromCharCode(result);\n    }\n\n    // Decode a character code into a byte.\n    // Must return 256 if character is out of alphabet range.\n    protected _decodeChar(c: number): number {\n        // Decoding works similar to encoding: using the same comparison\n        // function, but now it works on ranges: result is always incremented\n        // by value, but this value becomes zero if the range is not\n        // satisfied.\n        //\n        // Decoding starts with invalid value, 256, which is then\n        // subtracted when the range is satisfied. If none of the ranges\n        // apply, the function returns 256, which is then checked by\n        // the caller to throw error.\n        let result = INVALID_BYTE; // start with invalid character\n\n        // c == 43 (c > 42 and c < 44)\n        result += (((42 - c) & (c - 44)) >>> 8) & (-INVALID_BYTE + c - 43 + 62);\n        // c == 47 (c > 46 and c < 48)\n        result += (((46 - c) & (c - 48)) >>> 8) & (-INVALID_BYTE + c - 47 + 63);\n        // c > 47 and c < 58\n        result += (((47 - c) & (c - 58)) >>> 8) & (-INVALID_BYTE + c - 48 + 52);\n        // c > 64 and c < 91\n        result += (((64 - c) & (c - 91)) >>> 8) & (-INVALID_BYTE + c - 65 + 0);\n        // c > 96 and c < 123\n        result += (((96 - c) & (c - 123)) >>> 8) & (-INVALID_BYTE + c - 97 + 26);\n\n        return result;\n    }\n\n    private _getPaddingLength(s: string): number {\n        let paddingLength = 0;\n        if (this._paddingCharacter) {\n            for (let i = s.length - 1; i >= 0; i--) {\n                if (s[i] !== this._paddingCharacter) {\n                    break;\n                }\n                paddingLength++;\n            }\n            if (s.length < 4 || paddingLength > 2) {\n                throw new Error(\"Base64Coder: incorrect padding\");\n            }\n        }\n        return paddingLength;\n    }\n\n}\n\nconst stdCoder = new Coder();\n\nexport function encode(data: Uint8Array): string {\n    return stdCoder.encode(data);\n}\n\nexport function decode(s: string): Uint8Array {\n    return stdCoder.decode(s);\n}\n\n/**\n * Implements URL-safe Base64 encoding.\n * (Same as Base64, but '+' is replaced with '-', and '/' with '_').\n *\n * Operates in constant time.\n */\nexport class URLSafeCoder extends Coder {\n    // URL-safe encoding have the following encoded/decoded ranges:\n    //\n    // ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz 0123456789  -   _\n    // Index:   0 - 25                    26 - 51              52 - 61   62  63\n    // ASCII:  65 - 90                    97 - 122             48 - 57   45  95\n    //\n\n    protected _encodeByte(b: number): string {\n        let result = b;\n        // b >= 0\n        result += 65;\n        // b > 25\n        result += ((25 - b) >>> 8) & ((0 - 65) - 26 + 97);\n        // b > 51\n        result += ((51 - b) >>> 8) & ((26 - 97) - 52 + 48);\n        // b > 61\n        result += ((61 - b) >>> 8) & ((52 - 48) - 62 + 45);\n        // b > 62\n        result += ((62 - b) >>> 8) & ((62 - 45) - 63 + 95);\n\n        return String.fromCharCode(result);\n    }\n\n    protected _decodeChar(c: number): number {\n        let result = INVALID_BYTE;\n\n        // c == 45 (c > 44 and c < 46)\n        result += (((44 - c) & (c - 46)) >>> 8) & (-INVALID_BYTE + c - 45 + 62);\n        // c == 95 (c > 94 and c < 96)\n        result += (((94 - c) & (c - 96)) >>> 8) & (-INVALID_BYTE + c - 95 + 63);\n        // c > 47 and c < 58\n        result += (((47 - c) & (c - 58)) >>> 8) & (-INVALID_BYTE + c - 48 + 52);\n        // c > 64 and c < 91\n        result += (((64 - c) & (c - 91)) >>> 8) & (-INVALID_BYTE + c - 65 + 0);\n        // c > 96 and c < 123\n        result += (((96 - c) & (c - 123)) >>> 8) & (-INVALID_BYTE + c - 97 + 26);\n\n        return result;\n    }\n}\n\nconst urlSafeCoder = new URLSafeCoder();\n\nexport function encodeURLSafe(data: Uint8Array): string {\n    return urlSafeCoder.encode(data);\n}\n\nexport function decodeURLSafe(s: string): Uint8Array {\n    return urlSafeCoder.decode(s);\n}\n\n\nexport const encodedLength = (length: number) =>\n    stdCoder.encodedLength(length);\n\nexport const maxDecodedLength = (length: number) =>\n    stdCoder.maxDecodedLength(length);\n\nexport const decodedLength = (s: string) =>\n    stdCoder.decodedLength(s);\n","// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package utf8 implements UTF-8 encoding and decoding.\n */\n\nconst INVALID_UTF16 = \"utf8: invalid string\";\nconst INVALID_UTF8 = \"utf8: invalid source encoding\";\n\n/**\n * Encodes the given string into UTF-8 byte array.\n * Throws if the source string has invalid UTF-16 encoding.\n */\nexport function encode(s: string): Uint8Array {\n    // Calculate result length and allocate output array.\n    // encodedLength() also validates string and throws errors,\n    // so we don't need repeat validation here.\n    const arr = new Uint8Array(encodedLength(s));\n\n    let pos = 0;\n    for (let i = 0; i < s.length; i++) {\n        let c = s.charCodeAt(i);\n        if (c < 0x80) {\n            arr[pos++] = c;\n        } else if (c < 0x800) {\n            arr[pos++] = 0xc0 | c >> 6;\n            arr[pos++] = 0x80 | c & 0x3f;\n        } else if (c < 0xd800) {\n            arr[pos++] = 0xe0 | c >> 12;\n            arr[pos++] = 0x80 | (c >> 6) & 0x3f;\n            arr[pos++] = 0x80 | c & 0x3f;\n        } else {\n            i++; // get one more character\n            c = (c & 0x3ff) << 10;\n            c |= s.charCodeAt(i) & 0x3ff;\n            c += 0x10000;\n\n            arr[pos++] = 0xf0 | c >> 18;\n            arr[pos++] = 0x80 | (c >> 12) & 0x3f;\n            arr[pos++] = 0x80 | (c >> 6) & 0x3f;\n            arr[pos++] = 0x80 | c & 0x3f;\n        }\n    }\n    return arr;\n}\n\n/**\n * Returns the number of bytes required to encode the given string into UTF-8.\n * Throws if the source string has invalid UTF-16 encoding.\n */\nexport function encodedLength(s: string): number {\n    let result = 0;\n    for (let i = 0; i < s.length; i++) {\n        const c = s.charCodeAt(i);\n        if (c < 0x80) {\n            result += 1;\n        } else if (c < 0x800) {\n            result += 2;\n        } else if (c < 0xd800) {\n            result += 3;\n        } else if (c <= 0xdfff) {\n            if (i >= s.length - 1) {\n                throw new Error(INVALID_UTF16);\n            }\n            i++; // \"eat\" next character\n            result += 4;\n        } else {\n            throw new Error(INVALID_UTF16);\n        }\n    }\n    return result;\n}\n\n/**\n * Decodes the given byte array from UTF-8 into a string.\n * Throws if encoding is invalid.\n */\nexport function decode(arr: Uint8Array): string {\n    const chars: string[] = [];\n    for (let i = 0; i < arr.length; i++) {\n        let b = arr[i];\n\n        if (b & 0x80) {\n            let min;\n            if (b < 0xe0) {\n                // Need 1 more byte.\n                if (i >= arr.length) {\n                    throw new Error(INVALID_UTF8);\n                }\n                const n1 = arr[++i];\n                if ((n1 & 0xc0) !== 0x80) {\n                    throw new Error(INVALID_UTF8);\n                }\n                b = (b & 0x1f) << 6 | (n1 & 0x3f);\n                min = 0x80;\n            } else if (b < 0xf0) {\n                // Need 2 more bytes.\n                if (i >= arr.length - 1) {\n                    throw new Error(INVALID_UTF8);\n                }\n                const n1 = arr[++i];\n                const n2 = arr[++i];\n                if ((n1 & 0xc0) !== 0x80 || (n2 & 0xc0) !== 0x80) {\n                    throw new Error(INVALID_UTF8);\n                }\n                b = (b & 0x0f) << 12 | (n1 & 0x3f) << 6 | (n2 & 0x3f);\n                min = 0x800;\n            } else if (b < 0xf8) {\n                // Need 3 more bytes.\n                if (i >= arr.length - 2) {\n                    throw new Error(INVALID_UTF8);\n                }\n                const n1 = arr[++i];\n                const n2 = arr[++i];\n                const n3 = arr[++i];\n                if ((n1 & 0xc0) !== 0x80 || (n2 & 0xc0) !== 0x80 || (n3 & 0xc0) !== 0x80) {\n                    throw new Error(INVALID_UTF8);\n                }\n                b = (b & 0x0f) << 18 | (n1 & 0x3f) << 12 | (n2 & 0x3f) << 6 | (n3 & 0x3f);\n                min = 0x10000;\n            } else {\n                throw new Error(INVALID_UTF8);\n            }\n\n            if (b < min || (b >= 0xd800 && b <= 0xdfff)) {\n                throw new Error(INVALID_UTF8);\n            }\n\n            if (b >= 0x10000) {\n                // Surrogate pair.\n                if (b > 0x10ffff) {\n                    throw new Error(INVALID_UTF8);\n                }\n                b -= 0x10000;\n                chars.push(String.fromCharCode(0xd800 | (b >> 10)));\n                b = 0xdc00 | (b & 0x3ff);\n            }\n        }\n\n        chars.push(String.fromCharCode(b));\n    }\n    return chars.join(\"\");\n}\n","// required so we don't have to do require('pusher').default etc.\nmodule.exports = require('./pusher').default;\n","export default function encode(s: any): string {\n  return btoa(utob(s));\n}\n\nvar fromCharCode = String.fromCharCode;\n\nvar b64chars =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nvar b64tab = {};\n\nfor (var i = 0, l = b64chars.length; i < l; i++) {\n  b64tab[b64chars.charAt(i)] = i;\n}\n\nvar cb_utob = function(c) {\n  var cc = c.charCodeAt(0);\n  return cc < 0x80\n    ? c\n    : cc < 0x800\n    ? fromCharCode(0xc0 | (cc >>> 6)) + fromCharCode(0x80 | (cc & 0x3f))\n    : fromCharCode(0xe0 | ((cc >>> 12) & 0x0f)) +\n      fromCharCode(0x80 | ((cc >>> 6) & 0x3f)) +\n      fromCharCode(0x80 | (cc & 0x3f));\n};\n\nvar utob = function(u) {\n  return u.replace(/[^\\x00-\\x7F]/g, cb_utob);\n};\n\nvar cb_encode = function(ccc) {\n  var padlen = [0, 2, 1][ccc.length % 3];\n  var ord =\n    (ccc.charCodeAt(0) << 16) |\n    ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8) |\n    (ccc.length > 2 ? ccc.charCodeAt(2) : 0);\n  var chars = [\n    b64chars.charAt(ord >>> 18),\n    b64chars.charAt((ord >>> 12) & 63),\n    padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n    padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n  ];\n  return chars.join('');\n};\n\nvar btoa =\n  global.btoa ||\n  function(b) {\n    return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n  };\n","import TimedCallback from './timed_callback';\nimport { Delay, Scheduler, Canceller } from './scheduling';\n\nabstract class Timer {\n  protected clear: Canceller;\n  protected timer: number | void;\n\n  constructor(\n    set: Scheduler,\n    clear: Canceller,\n    delay: Delay,\n    callback: TimedCallback\n  ) {\n    this.clear = clear;\n    this.timer = set(() => {\n      if (this.timer) {\n        this.timer = callback(this.timer);\n      }\n    }, delay);\n  }\n\n  /** Returns whether the timer is still running.\n   *\n   * @return {Boolean}\n   */\n  isRunning(): boolean {\n    return this.timer !== null;\n  }\n\n  /** Aborts a timer when it's running. */\n  ensureAborted() {\n    if (this.timer) {\n      this.clear(this.timer);\n      this.timer = null;\n    }\n  }\n}\n\nexport default Timer;\n","import Timer from './abstract_timer';\nimport TimedCallback from './timed_callback';\nimport { Delay } from './scheduling';\n\n// We need to bind clear functions this way to avoid exceptions on IE8\nfunction clearTimeout(timer) {\n  global.clearTimeout(timer);\n}\nfunction clearInterval(timer) {\n  global.clearInterval(timer);\n}\n\n/** Cross-browser compatible one-off timer abstraction.\n *\n * @param {Number} delay\n * @param {Function} callback\n */\nexport class OneOffTimer extends Timer {\n  constructor(delay: Delay, callback: TimedCallback) {\n    super(setTimeout, clearTimeout, delay, function(timer) {\n      callback();\n      return null;\n    });\n  }\n}\n\n/** Cross-browser compatible periodic timer abstraction.\n *\n * @param {Number} delay\n * @param {Function} callback\n */\nexport class PeriodicTimer extends Timer {\n  constructor(delay: Delay, callback: TimedCallback) {\n    super(setInterval, clearInterval, delay, function(timer) {\n      callback();\n      return timer;\n    });\n  }\n}\n","import * as Collections from './utils/collections';\nimport TimedCallback from './utils/timers/timed_callback';\nimport { OneOffTimer, PeriodicTimer } from './utils/timers';\n\nvar Util = {\n  now(): number {\n    if (Date.now) {\n      return Date.now();\n    } else {\n      return new Date().valueOf();\n    }\n  },\n\n  defer(callback: TimedCallback): OneOffTimer {\n    return new OneOffTimer(0, callback);\n  },\n\n  /** Builds a function that will proxy a method call to its first argument.\n   *\n   * Allows partial application of arguments, so additional arguments are\n   * prepended to the argument list.\n   *\n   * @param  {String} name method name\n   * @return {Function} proxy function\n   */\n  method(name: string, ...args: any[]): Function {\n    var boundArguments = Array.prototype.slice.call(arguments, 1);\n    return function(object) {\n      return object[name].apply(object, boundArguments.concat(arguments));\n    };\n  }\n};\n\nexport default Util;\n","import base64encode from '../base64';\nimport Util from '../util';\n\n/** Merges multiple objects into the target argument.\n *\n * For properties that are plain Objects, performs a deep-merge. For the\n * rest it just copies the value of the property.\n *\n * To extend prototypes use it as following:\n *   Pusher.Util.extend(Target.prototype, Base.prototype)\n *\n * You can also use it to merge objects without altering them:\n *   Pusher.Util.extend({}, object1, object2)\n *\n * @param  {Object} target\n * @return {Object} the target argument\n */\nexport function extend<T>(target: any, ...sources: any[]): T {\n  for (var i = 0; i < sources.length; i++) {\n    var extensions = sources[i];\n    for (var property in extensions) {\n      if (\n        extensions[property] &&\n        extensions[property].constructor &&\n        extensions[property].constructor === Object\n      ) {\n        target[property] = extend(target[property] || {}, extensions[property]);\n      } else {\n        target[property] = extensions[property];\n      }\n    }\n  }\n  return target;\n}\n\nexport function stringify(): string {\n  var m = ['Pusher'];\n  for (var i = 0; i < arguments.length; i++) {\n    if (typeof arguments[i] === 'string') {\n      m.push(arguments[i]);\n    } else {\n      m.push(safeJSONStringify(arguments[i]));\n    }\n  }\n  return m.join(' : ');\n}\n\nexport function arrayIndexOf(array: any[], item: any): number {\n  // MSIE doesn't have array.indexOf\n  var nativeIndexOf = Array.prototype.indexOf;\n  if (array === null) {\n    return -1;\n  }\n  if (nativeIndexOf && array.indexOf === nativeIndexOf) {\n    return array.indexOf(item);\n  }\n  for (var i = 0, l = array.length; i < l; i++) {\n    if (array[i] === item) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/** Applies a function f to all properties of an object.\n *\n * Function f gets 3 arguments passed:\n * - element from the object\n * - key of the element\n * - reference to the object\n *\n * @param {Object} object\n * @param {Function} f\n */\nexport function objectApply(object: any, f: Function) {\n  for (var key in object) {\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      f(object[key], key, object);\n    }\n  }\n}\n\n/** Return a list of objects own proerty keys\n *\n * @param {Object} object\n * @returns {Array}\n */\nexport function keys(object: any): string[] {\n  var keys = [];\n  objectApply(object, function(_, key) {\n    keys.push(key);\n  });\n  return keys;\n}\n\n/** Return a list of object's own property values\n *\n * @param {Object} object\n * @returns {Array}\n */\nexport function values(object: any): any[] {\n  var values = [];\n  objectApply(object, function(value) {\n    values.push(value);\n  });\n  return values;\n}\n\n/** Applies a function f to all elements of an array.\n *\n * Function f gets 3 arguments passed:\n * - element from the array\n * - index of the element\n * - reference to the array\n *\n * @param {Array} array\n * @param {Function} f\n */\nexport function apply(array: any[], f: Function, context?: any) {\n  for (var i = 0; i < array.length; i++) {\n    f.call(context || global, array[i], i, array);\n  }\n}\n\n/** Maps all elements of the array and returns the result.\n *\n * Function f gets 4 arguments passed:\n * - element from the array\n * - index of the element\n * - reference to the source array\n * - reference to the destination array\n *\n * @param {Array} array\n * @param {Function} f\n */\nexport function map(array: any[], f: Function): any[] {\n  var result = [];\n  for (var i = 0; i < array.length; i++) {\n    result.push(f(array[i], i, array, result));\n  }\n  return result;\n}\n\n/** Maps all elements of the object and returns the result.\n *\n * Function f gets 4 arguments passed:\n * - element from the object\n * - key of the element\n * - reference to the source object\n * - reference to the destination object\n *\n * @param {Object} object\n * @param {Function} f\n */\nexport function mapObject(object: any, f: Function): any {\n  var result = {};\n  objectApply(object, function(value, key) {\n    result[key] = f(value);\n  });\n  return result;\n}\n\n/** Filters elements of the array using a test function.\n *\n * Function test gets 4 arguments passed:\n * - element from the array\n * - index of the element\n * - reference to the source array\n * - reference to the destination array\n *\n * @param {Array} array\n * @param {Function} f\n */\nexport function filter(array: any[], test: Function): any[] {\n  test =\n    test ||\n    function(value) {\n      return !!value;\n    };\n\n  var result = [];\n  for (var i = 0; i < array.length; i++) {\n    if (test(array[i], i, array, result)) {\n      result.push(array[i]);\n    }\n  }\n  return result;\n}\n\n/** Filters properties of the object using a test function.\n *\n * Function test gets 4 arguments passed:\n * - element from the object\n * - key of the element\n * - reference to the source object\n * - reference to the destination object\n *\n * @param {Object} object\n * @param {Function} f\n */\nexport function filterObject(object: Object, test: Function) {\n  var result = {};\n  objectApply(object, function(value, key) {\n    if ((test && test(value, key, object, result)) || Boolean(value)) {\n      result[key] = value;\n    }\n  });\n  return result;\n}\n\n/** Flattens an object into a two-dimensional array.\n *\n * @param  {Object} object\n * @return {Array} resulting array of [key, value] pairs\n */\nexport function flatten(object: Object): any[] {\n  var result = [];\n  objectApply(object, function(value, key) {\n    result.push([key, value]);\n  });\n  return result;\n}\n\n/** Checks whether any element of the array passes the test.\n *\n * Function test gets 3 arguments passed:\n * - element from the array\n * - index of the element\n * - reference to the source array\n *\n * @param {Array} array\n * @param {Function} f\n */\nexport function any(array: any[], test: Function): boolean {\n  for (var i = 0; i < array.length; i++) {\n    if (test(array[i], i, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/** Checks whether all elements of the array pass the test.\n *\n * Function test gets 3 arguments passed:\n * - element from the array\n * - index of the element\n * - reference to the source array\n *\n * @param {Array} array\n * @param {Function} f\n */\nexport function all(array: any[], test: Function): boolean {\n  for (var i = 0; i < array.length; i++) {\n    if (!test(array[i], i, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function encodeParamsObject(data): string {\n  return mapObject(data, function(value) {\n    if (typeof value === 'object') {\n      value = safeJSONStringify(value);\n    }\n    return encodeURIComponent(base64encode(value.toString()));\n  });\n}\n\nexport function buildQueryString(data: any): string {\n  var params = filterObject(data, function(value) {\n    return value !== undefined;\n  });\n\n  var query = map(\n    flatten(encodeParamsObject(params)),\n    Util.method('join', '=')\n  ).join('&');\n\n  return query;\n}\n\n/**\n * See https://github.com/douglascrockford/JSON-js/blob/master/cycle.js\n *\n * Remove circular references from an object. Required for JSON.stringify in\n * React Native, which tends to blow up a lot.\n *\n * @param  {any} object\n * @return {any}        Decycled object\n */\nexport function decycleObject(object: any): any {\n  var objects = [],\n    paths = [];\n\n  return (function derez(value, path) {\n    var i, name, nu;\n\n    switch (typeof value) {\n      case 'object':\n        if (!value) {\n          return null;\n        }\n        for (i = 0; i < objects.length; i += 1) {\n          if (objects[i] === value) {\n            return { $ref: paths[i] };\n          }\n        }\n\n        objects.push(value);\n        paths.push(path);\n\n        if (Object.prototype.toString.apply(value) === '[object Array]') {\n          nu = [];\n          for (i = 0; i < value.length; i += 1) {\n            nu[i] = derez(value[i], path + '[' + i + ']');\n          }\n        } else {\n          nu = {};\n          for (name in value) {\n            if (Object.prototype.hasOwnProperty.call(value, name)) {\n              nu[name] = derez(\n                value[name],\n                path + '[' + JSON.stringify(name) + ']'\n              );\n            }\n          }\n        }\n        return nu;\n      case 'number':\n      case 'string':\n      case 'boolean':\n        return value;\n    }\n  })(object, '$');\n}\n\n/**\n * Provides a cross-browser and cross-platform way to safely stringify objects\n * into JSON. This is particularly necessary for ReactNative, where circular JSON\n * structures throw an exception.\n *\n * @param  {any}    source The object to stringify\n * @return {string}        The serialized output.\n */\nexport function safeJSONStringify(source: any): string {\n  try {\n    return JSON.stringify(source);\n  } catch (e) {\n    return JSON.stringify(decycleObject(source));\n  }\n}\n","import { AuthOptions, UserAuthenticationHandler } from './auth/options';\nimport { AuthTransport } from './config';\n\nexport interface DefaultConfig {\n  VERSION: string;\n  PROTOCOL: number;\n  wsPort: number;\n  wssPort: number;\n  wsPath: string;\n  httpHost: string;\n  httpPort: number;\n  httpsPort: number;\n  httpPath: string;\n  stats_host: string;\n  authEndpoint: string;\n  authTransport: AuthTransport;\n  activityTimeout: number;\n  pongTimeout: number;\n  unavailableTimeout: number;\n  cluster: string;\n  userAuthentication: AuthOptions<UserAuthenticationHandler>;\n\n  cdn_http?: string;\n  cdn_https?: string;\n  dependency_suffix?: string;\n}\n\nvar Defaults: DefaultConfig = {\n  VERSION: VERSION,\n  PROTOCOL: 7,\n\n  wsPort: 80,\n  wssPort: 443,\n  wsPath: '',\n  // DEPRECATED: SockJS fallback parameters\n  httpHost: 'sockjs.pusher.com',\n  httpPort: 80,\n  httpsPort: 443,\n  httpPath: '/pusher',\n  // DEPRECATED: Stats\n  stats_host: 'stats.pusher.com',\n  // DEPRECATED: Other settings\n  authEndpoint: '/pusher/auth',\n  authTransport: 'ajax',\n  activityTimeout: 120000,\n  pongTimeout: 30000,\n  unavailableTimeout: 10000,\n  cluster: 'mt1',\n  userAuthentication: {\n    endpoint: '/pusher/user-auth',\n    transport: 'ajax'\n  },\n\n  // CDN configuration\n  cdn_http: CDN_HTTP,\n  cdn_https: CDN_HTTPS,\n  dependency_suffix: DEPENDENCY_SUFFIX\n};\n\nexport default Defaults;\n","import Defaults from '../defaults';\nimport { default as URLScheme, URLSchemeParams } from './url_scheme';\n\nfunction getGenericURL(\n  baseScheme: string,\n  params: URLSchemeParams,\n  path: string\n): string {\n  var scheme = baseScheme + (params.useTLS ? 's' : '');\n  var host = params.useTLS ? params.hostTLS : params.hostNonTLS;\n  return scheme + '://' + host + path;\n}\n\nfunction getGenericPath(key: string, queryString?: string): string {\n  var path = '/app/' + key;\n  var query =\n    '?protocol=' +\n    Defaults.PROTOCOL +\n    '&client=js' +\n    '&version=' +\n    Defaults.VERSION +\n    (queryString ? '&' + queryString : '');\n  return path + query;\n}\n\nexport var ws: URLScheme = {\n  getInitial: function(key: string, params: URLSchemeParams): string {\n    var path = (params.httpPath || '') + getGenericPath(key, 'flash=false');\n    return getGenericURL('ws', params, path);\n  }\n};\n\nexport var http: URLScheme = {\n  getInitial: function(key: string, params: URLSchemeParams): string {\n    var path = (params.httpPath || '/pusher') + getGenericPath(key);\n    return getGenericURL('http', params, path);\n  }\n};\n\nexport var sockjs: URLScheme = {\n  getInitial: function(key: string, params: URLSchemeParams): string {\n    return getGenericURL('http', params, params.httpPath || '/pusher');\n  },\n  getPath: function(key: string, params: URLSchemeParams): string {\n    return getGenericPath(key);\n  }\n};\n","import Callback from './callback';\nimport * as Collections from '../utils/collections';\nimport CallbackTable from './callback_table';\n\nexport default class CallbackRegistry {\n  _callbacks: CallbackTable;\n\n  constructor() {\n    this._callbacks = {};\n  }\n\n  get(name: string): Callback[] {\n    return this._callbacks[prefix(name)];\n  }\n\n  add(name: string, callback: Function, context: any) {\n    var prefixedEventName = prefix(name);\n    this._callbacks[prefixedEventName] =\n      this._callbacks[prefixedEventName] || [];\n    this._callbacks[prefixedEventName].push({\n      fn: callback,\n      context: context\n    });\n  }\n\n  remove(name?: string, callback?: Function, context?: any) {\n    if (!name && !callback && !context) {\n      this._callbacks = {};\n      return;\n    }\n\n    var names = name ? [prefix(name)] : Collections.keys(this._callbacks);\n\n    if (callback || context) {\n      this.removeCallback(names, callback, context);\n    } else {\n      this.removeAllCallbacks(names);\n    }\n  }\n\n  private removeCallback(names: string[], callback: Function, context: any) {\n    Collections.apply(\n      names,\n      function(name) {\n        this._callbacks[name] = Collections.filter(\n          this._callbacks[name] || [],\n          function(binding) {\n            return (\n              (callback && callback !== binding.fn) ||\n              (context && context !== binding.context)\n            );\n          }\n        );\n        if (this._callbacks[name].length === 0) {\n          delete this._callbacks[name];\n        }\n      },\n      this\n    );\n  }\n\n  private removeAllCallbacks(names: string[]) {\n    Collections.apply(\n      names,\n      function(name) {\n        delete this._callbacks[name];\n      },\n      this\n    );\n  }\n}\n\nfunction prefix(name: string): string {\n  return '_' + name;\n}\n","import * as Collections from '../utils/collections';\nimport Callback from './callback';\nimport Metadata from '../channels/metadata';\nimport CallbackRegistry from './callback_registry';\n\n/** Manages callback bindings and event emitting.\n *\n * @param Function failThrough called when no listeners are bound to an event\n */\nexport default class Dispatcher {\n  callbacks: CallbackRegistry;\n  global_callbacks: Function[];\n  failThrough: Function;\n\n  constructor(failThrough?: Function) {\n    this.callbacks = new CallbackRegistry();\n    this.global_callbacks = [];\n    this.failThrough = failThrough;\n  }\n\n  bind(eventName: string, callback: Function, context?: any) {\n    this.callbacks.add(eventName, callback, context);\n    return this;\n  }\n\n  bind_global(callback: Function) {\n    this.global_callbacks.push(callback);\n    return this;\n  }\n\n  unbind(eventName?: string, callback?: Function, context?: any) {\n    this.callbacks.remove(eventName, callback, context);\n    return this;\n  }\n\n  unbind_global(callback?: Function) {\n    if (!callback) {\n      this.global_callbacks = [];\n      return this;\n    }\n\n    this.global_callbacks = Collections.filter(\n      this.global_callbacks || [],\n      c => c !== callback\n    );\n\n    return this;\n  }\n\n  unbind_all() {\n    this.unbind();\n    this.unbind_global();\n    return this;\n  }\n\n  emit(eventName: string, data?: any, metadata?: Metadata): Dispatcher {\n    for (var i = 0; i < this.global_callbacks.length; i++) {\n      this.global_callbacks[i](eventName, data);\n    }\n\n    var callbacks = this.callbacks.get(eventName);\n    var args = [];\n\n    if (metadata) {\n      // if there's a metadata argument, we need to call the callback with both\n      // data and metadata regardless of whether data is undefined\n      args.push(data, metadata);\n    } else if (data) {\n      // metadata is undefined, so we only need to call the callback with data\n      // if data exists\n      args.push(data);\n    }\n\n    if (callbacks && callbacks.length > 0) {\n      for (var i = 0; i < callbacks.length; i++) {\n        callbacks[i].fn.apply(callbacks[i].context || global, args);\n      }\n    } else if (this.failThrough) {\n      this.failThrough(eventName, data);\n    }\n\n    return this;\n  }\n}\n","import { stringify } from './utils/collections';\nimport Pusher from './pusher';\n\nclass Logger {\n  debug(...args: any[]) {\n    this.log(this.globalLog, args);\n  }\n\n  warn(...args: any[]) {\n    this.log(this.globalLogWarn, args);\n  }\n\n  error(...args: any[]) {\n    this.log(this.globalLogError, args);\n  }\n\n  private globalLog = (message: string) => {\n    if (global.console && global.console.log) {\n      global.console.log(message);\n    }\n  };\n\n  private globalLogWarn(message: string) {\n    if (global.console && global.console.warn) {\n      global.console.warn(message);\n    } else {\n      this.globalLog(message);\n    }\n  }\n\n  private globalLogError(message: string) {\n    if (global.console && global.console.error) {\n      global.console.error(message);\n    } else {\n      this.globalLogWarn(message);\n    }\n  }\n\n  private log(\n    defaultLoggingFunction: (message: string) => void,\n    ...args: any[]\n  ) {\n    var message = stringify.apply(this, arguments);\n    if (Pusher.log) {\n      Pusher.log(message);\n    } else if (Pusher.logToConsole) {\n      const log = defaultLoggingFunction.bind(this);\n      log(message);\n    }\n  }\n}\n\nexport default new Logger();\n","import Util from '../util';\nimport * as Collections from '../utils/collections';\nimport { default as EventsDispatcher } from '../events/dispatcher';\nimport Logger from '../logger';\nimport TransportHooks from './transport_hooks';\nimport Socket from '../socket';\nimport Runtime from 'runtime';\nimport Timeline from '../timeline/timeline';\nimport TransportConnectionOptions from './transport_connection_options';\n\n/** Provides universal API for transport connections.\n *\n * Transport connection is a low-level object that wraps a connection method\n * and exposes a simple evented interface for the connection state and\n * messaging. It does not implement Pusher-specific WebSocket protocol.\n *\n * Additionally, it fetches resources needed for transport to work and exposes\n * an interface for querying transport features.\n *\n * States:\n * - new - initial state after constructing the object\n * - initializing - during initialization phase, usually fetching resources\n * - intialized - ready to establish a connection\n * - connection - when connection is being established\n * - open - when connection ready to be used\n * - closed - after connection was closed be either side\n *\n * Emits:\n * - error - after the connection raised an error\n *\n * Options:\n * - useTLS - whether connection should be over TLS\n * - hostTLS - host to connect to when connection is over TLS\n * - hostNonTLS - host to connect to when connection is over TLS\n *\n * @param {String} key application key\n * @param {Object} options\n */\nexport default class TransportConnection extends EventsDispatcher {\n  hooks: TransportHooks;\n  name: string;\n  priority: number;\n  key: string;\n  options: TransportConnectionOptions;\n  state: string;\n  timeline: Timeline;\n  activityTimeout: number;\n  id: number;\n  socket: Socket;\n  beforeOpen: Function;\n  initialize: Function;\n\n  constructor(\n    hooks: TransportHooks,\n    name: string,\n    priority: number,\n    key: string,\n    options: TransportConnectionOptions\n  ) {\n    super();\n    this.initialize = Runtime.transportConnectionInitializer;\n    this.hooks = hooks;\n    this.name = name;\n    this.priority = priority;\n    this.key = key;\n    this.options = options;\n\n    this.state = 'new';\n    this.timeline = options.timeline;\n    this.activityTimeout = options.activityTimeout;\n    this.id = this.timeline.generateUniqueID();\n  }\n\n  /** Checks whether the transport handles activity checks by itself.\n   *\n   * @return {Boolean}\n   */\n  handlesActivityChecks(): boolean {\n    return Boolean(this.hooks.handlesActivityChecks);\n  }\n\n  /** Checks whether the transport supports the ping/pong API.\n   *\n   * @return {Boolean}\n   */\n  supportsPing(): boolean {\n    return Boolean(this.hooks.supportsPing);\n  }\n\n  /** Tries to establish a connection.\n   *\n   * @returns {Boolean} false if transport is in invalid state\n   */\n  connect(): boolean {\n    if (this.socket || this.state !== 'initialized') {\n      return false;\n    }\n\n    var url = this.hooks.urls.getInitial(this.key, this.options);\n    try {\n      this.socket = this.hooks.getSocket(url, this.options);\n    } catch (e) {\n      Util.defer(() => {\n        this.onError(e);\n        this.changeState('closed');\n      });\n      return false;\n    }\n\n    this.bindListeners();\n\n    Logger.debug('Connecting', { transport: this.name, url });\n    this.changeState('connecting');\n    return true;\n  }\n\n  /** Closes the connection.\n   *\n   * @return {Boolean} true if there was a connection to close\n   */\n  close(): boolean {\n    if (this.socket) {\n      this.socket.close();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** Sends data over the open connection.\n   *\n   * @param {String} data\n   * @return {Boolean} true only when in the \"open\" state\n   */\n  send(data: any): boolean {\n    if (this.state === 'open') {\n      // Workaround for MobileSafari bug (see https://gist.github.com/2052006)\n      Util.defer(() => {\n        if (this.socket) {\n          this.socket.send(data);\n        }\n      });\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /** Sends a ping if the connection is open and transport supports it. */\n  ping() {\n    if (this.state === 'open' && this.supportsPing()) {\n      this.socket.ping();\n    }\n  }\n\n  private onOpen() {\n    if (this.hooks.beforeOpen) {\n      this.hooks.beforeOpen(\n        this.socket,\n        this.hooks.urls.getPath(this.key, this.options)\n      );\n    }\n    this.changeState('open');\n    this.socket.onopen = undefined;\n  }\n\n  private onError(error) {\n    this.emit('error', { type: 'WebSocketError', error: error });\n    this.timeline.error(this.buildTimelineMessage({ error: error.toString() }));\n  }\n\n  private onClose(closeEvent?: any) {\n    if (closeEvent) {\n      this.changeState('closed', {\n        code: closeEvent.code,\n        reason: closeEvent.reason,\n        wasClean: closeEvent.wasClean\n      });\n    } else {\n      this.changeState('closed');\n    }\n    this.unbindListeners();\n    this.socket = undefined;\n  }\n\n  private onMessage(message) {\n    this.emit('message', message);\n  }\n\n  private onActivity() {\n    this.emit('activity');\n  }\n\n  private bindListeners() {\n    this.socket.onopen = () => {\n      this.onOpen();\n    };\n    this.socket.onerror = error => {\n      this.onError(error);\n    };\n    this.socket.onclose = closeEvent => {\n      this.onClose(closeEvent);\n    };\n    this.socket.onmessage = message => {\n      this.onMessage(message);\n    };\n\n    if (this.supportsPing()) {\n      this.socket.onactivity = () => {\n        this.onActivity();\n      };\n    }\n  }\n\n  private unbindListeners() {\n    if (this.socket) {\n      this.socket.onopen = undefined;\n      this.socket.onerror = undefined;\n      this.socket.onclose = undefined;\n      this.socket.onmessage = undefined;\n      if (this.supportsPing()) {\n        this.socket.onactivity = undefined;\n      }\n    }\n  }\n\n  private changeState(state: string, params?: any) {\n    this.state = state;\n    this.timeline.info(\n      this.buildTimelineMessage({\n        state: state,\n        params: params\n      })\n    );\n    this.emit(state, params);\n  }\n\n  buildTimelineMessage(message): any {\n    return Collections.extend({ cid: this.id }, message);\n  }\n}\n","import Factory from '../utils/factory';\nimport TransportHooks from './transport_hooks';\nimport TransportConnection from './transport_connection';\nimport TransportConnectionOptions from './transport_connection_options';\n\n/** Provides interface for transport connection instantiation.\n *\n * Takes transport-specific hooks as the only argument, which allow checking\n * for transport support and creating its connections.\n *\n * Supported hooks: * - file - the name of the file to be fetched during initialization\n * - urls - URL scheme to be used by transport\n * - handlesActivityCheck - true when the transport handles activity checks\n * - supportsPing - true when the transport has a ping/activity API\n * - isSupported - tells whether the transport is supported in the environment\n * - getSocket - creates a WebSocket-compatible transport socket\n *\n * See transports.js for specific implementations.\n *\n * @param {Object} hooks object containing all needed transport hooks\n */\nexport default class Transport {\n  hooks: TransportHooks;\n\n  constructor(hooks: TransportHooks) {\n    this.hooks = hooks;\n  }\n\n  /** Returns whether the transport is supported in the environment.\n   *\n   * @param {Object} envronment te environment details (encryption, settings)\n   * @returns {Boolean} true when the transport is supported\n   */\n  isSupported(environment: any): boolean {\n    return this.hooks.isSupported(environment);\n  }\n\n  /** Creates a transport connection.\n   *\n   * @param {String} name\n   * @param {Number} priority\n   * @param {String} key the application key\n   * @param {Object} options\n   * @returns {TransportConnection}\n   */\n  createConnection(\n    name: string,\n    priority: number,\n    key: string,\n    options: any\n  ): TransportConnection {\n    return new TransportConnection(this.hooks, name, priority, key, options);\n  }\n}\n","import * as URLSchemes from 'core/transports/url_schemes';\nimport URLScheme from 'core/transports/url_scheme';\nimport Transport from 'core/transports/transport';\nimport Util from 'core/util';\nimport * as Collections from 'core/utils/collections';\nimport TransportHooks from 'core/transports/transport_hooks';\nimport TransportsTable from 'core/transports/transports_table';\nimport Runtime from 'runtime';\n\n/** WebSocket transport.\n *\n * Uses native WebSocket implementation, including MozWebSocket supported by\n * earlier Firefox versions.\n */\nvar WSTransport = new Transport(<TransportHooks>{\n  urls: URLSchemes.ws,\n  handlesActivityChecks: false,\n  supportsPing: false,\n\n  isInitialized: function() {\n    return Boolean(Runtime.getWebSocketAPI());\n  },\n  isSupported: function(): boolean {\n    return Boolean(Runtime.getWebSocketAPI());\n  },\n  getSocket: function(url) {\n    return Runtime.createWebSocket(url);\n  }\n});\n\nvar httpConfiguration = {\n  urls: URLSchemes.http,\n  handlesActivityChecks: false,\n  supportsPing: true,\n  isInitialized: function() {\n    return true;\n  }\n};\n\nexport var streamingConfiguration = Collections.extend(\n  {\n    getSocket: function(url) {\n      return Runtime.HTTPFactory.createStreamingSocket(url);\n    }\n  },\n  httpConfiguration\n);\nexport var pollingConfiguration = Collections.extend(\n  {\n    getSocket: function(url) {\n      return Runtime.HTTPFactory.createPollingSocket(url);\n    }\n  },\n  httpConfiguration\n);\n\nvar xhrConfiguration = {\n  isSupported: function(): boolean {\n    return Runtime.isXHRSupported();\n  }\n};\n\n/** HTTP streaming transport using CORS-enabled XMLHttpRequest. */\nvar XHRStreamingTransport = new Transport(\n  <TransportHooks>(\n    Collections.extend({}, streamingConfiguration, xhrConfiguration)\n  )\n);\n\n/** HTTP long-polling transport using CORS-enabled XMLHttpRequest. */\nvar XHRPollingTransport = new Transport(\n  <TransportHooks>Collections.extend({}, pollingConfiguration, xhrConfiguration)\n);\n\nvar Transports: TransportsTable = {\n  ws: WSTransport,\n  xhr_streaming: XHRStreamingTransport,\n  xhr_polling: XHRPollingTransport\n};\n\nexport default Transports;\n","import Util from '../util';\nimport * as Collections from '../utils/collections';\nimport TransportManager from './transport_manager';\nimport TransportConnection from './transport_connection';\nimport Transport from './transport';\nimport PingDelayOptions from './ping_delay_options';\n\n/** Creates transport connections monitored by a transport manager.\n *\n * When a transport is closed, it might mean the environment does not support\n * it. It's possible that messages get stuck in an intermediate buffer or\n * proxies terminate inactive connections. To combat these problems,\n * assistants monitor the connection lifetime, report unclean exits and\n * adjust ping timeouts to keep the connection active. The decision to disable\n * a transport is the manager's responsibility.\n *\n * @param {TransportManager} manager\n * @param {TransportConnection} transport\n * @param {Object} options\n */\nexport default class AssistantToTheTransportManager {\n  manager: TransportManager;\n  transport: Transport;\n  minPingDelay: number;\n  maxPingDelay: number;\n  pingDelay: number;\n\n  constructor(\n    manager: TransportManager,\n    transport: Transport,\n    options: PingDelayOptions\n  ) {\n    this.manager = manager;\n    this.transport = transport;\n    this.minPingDelay = options.minPingDelay;\n    this.maxPingDelay = options.maxPingDelay;\n    this.pingDelay = undefined;\n  }\n\n  /** Creates a transport connection.\n   *\n   * This function has the same API as Transport#createConnection.\n   *\n   * @param {String} name\n   * @param {Number} priority\n   * @param {String} key the application key\n   * @param {Object} options\n   * @returns {TransportConnection}\n   */\n  createConnection(\n    name: string,\n    priority: number,\n    key: string,\n    options: Object\n  ): TransportConnection {\n    options = Collections.extend({}, options, {\n      activityTimeout: this.pingDelay\n    });\n    var connection = this.transport.createConnection(\n      name,\n      priority,\n      key,\n      options\n    );\n\n    var openTimestamp = null;\n\n    var onOpen = function() {\n      connection.unbind('open', onOpen);\n      connection.bind('closed', onClosed);\n      openTimestamp = Util.now();\n    };\n    var onClosed = closeEvent => {\n      connection.unbind('closed', onClosed);\n\n      if (closeEvent.code === 1002 || closeEvent.code === 1003) {\n        // we don't want to use transports not obeying the protocol\n        this.manager.reportDeath();\n      } else if (!closeEvent.wasClean && openTimestamp) {\n        // report deaths only for short-living transport\n        var lifespan = Util.now() - openTimestamp;\n        if (lifespan < 2 * this.maxPingDelay) {\n          this.manager.reportDeath();\n          this.pingDelay = Math.max(lifespan / 2, this.minPingDelay);\n        }\n      }\n    };\n\n    connection.bind('open', onOpen);\n    return connection;\n  }\n\n  /** Returns whether the transport is supported in the environment.\n   *\n   * This function has the same API as Transport#isSupported. Might return false\n   * when the manager decides to kill the transport.\n   *\n   * @param {Object} environment the environment details (encryption, settings)\n   * @returns {Boolean} true when the transport is supported\n   */\n  isSupported(environment: string): boolean {\n    return this.manager.isAlive() && this.transport.isSupported(environment);\n  }\n}\n","import Action from './action';\nimport { PusherEvent } from './message-types';\n/**\n * Provides functions for handling Pusher protocol-specific messages.\n */\n\nconst Protocol = {\n  /**\n   * Decodes a message in a Pusher format.\n   *\n   * The MessageEvent we receive from the transport should contain a pusher event\n   * (https://pusher.com/docs/pusher_protocol#events) serialized as JSON in the\n   * data field\n   *\n   * The pusher event may contain a data field too, and it may also be\n   * serialised as JSON\n   *\n   * Throws errors when messages are not parse'able.\n   *\n   * @param  {MessageEvent} messageEvent\n   * @return {PusherEvent}\n   */\n  decodeMessage: function(messageEvent: MessageEvent): PusherEvent {\n    try {\n      var messageData = JSON.parse(messageEvent.data);\n      var pusherEventData = messageData.data;\n      if (typeof pusherEventData === 'string') {\n        try {\n          pusherEventData = JSON.parse(messageData.data);\n        } catch (e) {}\n      }\n      var pusherEvent: PusherEvent = {\n        event: messageData.event,\n        channel: messageData.channel,\n        data: pusherEventData\n      };\n      if (messageData.user_id) {\n        pusherEvent.user_id = messageData.user_id;\n      }\n      return pusherEvent;\n    } catch (e) {\n      throw { type: 'MessageParseError', error: e, data: messageEvent.data };\n    }\n  },\n\n  /**\n   * Encodes a message to be sent.\n   *\n   * @param  {PusherEvent} event\n   * @return {String}\n   */\n  encodeMessage: function(event: PusherEvent): string {\n    return JSON.stringify(event);\n  },\n\n  /**\n   * Processes a handshake message and returns appropriate actions.\n   *\n   * Returns an object with an 'action' and other action-specific properties.\n   *\n   * There are three outcomes when calling this function. First is a successful\n   * connection attempt, when pusher:connection_established is received, which\n   * results in a 'connected' action with an 'id' property. When passed a\n   * pusher:error event, it returns a result with action appropriate to the\n   * close code and an error. Otherwise, it raises an exception.\n   *\n   * @param {String} message\n   * @result Object\n   */\n  processHandshake: function(messageEvent: MessageEvent): Action {\n    var message = Protocol.decodeMessage(messageEvent);\n\n    if (message.event === 'pusher:connection_established') {\n      if (!message.data.activity_timeout) {\n        throw 'No activity timeout specified in handshake';\n      }\n      return {\n        action: 'connected',\n        id: message.data.socket_id,\n        activityTimeout: message.data.activity_timeout * 1000\n      };\n    } else if (message.event === 'pusher:error') {\n      // From protocol 6 close codes are sent only once, so this only\n      // happens when connection does not support close codes\n      return {\n        action: this.getCloseAction(message.data),\n        error: this.getCloseError(message.data)\n      };\n    } else {\n      throw 'Invalid handshake';\n    }\n  },\n\n  /**\n   * Dispatches the close event and returns an appropriate action name.\n   *\n   * See:\n   * 1. https://developer.mozilla.org/en-US/docs/WebSockets/WebSockets_reference/CloseEvent\n   * 2. http://pusher.com/docs/pusher_protocol\n   *\n   * @param  {CloseEvent} closeEvent\n   * @return {String} close action name\n   */\n  getCloseAction: function(closeEvent): string {\n    if (closeEvent.code < 4000) {\n      // ignore 1000 CLOSE_NORMAL, 1001 CLOSE_GOING_AWAY,\n      //        1005 CLOSE_NO_STATUS, 1006 CLOSE_ABNORMAL\n      // ignore 1007...3999\n      // handle 1002 CLOSE_PROTOCOL_ERROR, 1003 CLOSE_UNSUPPORTED,\n      //        1004 CLOSE_TOO_LARGE\n      if (closeEvent.code >= 1002 && closeEvent.code <= 1004) {\n        return 'backoff';\n      } else {\n        return null;\n      }\n    } else if (closeEvent.code === 4000) {\n      return 'tls_only';\n    } else if (closeEvent.code < 4100) {\n      return 'refused';\n    } else if (closeEvent.code < 4200) {\n      return 'backoff';\n    } else if (closeEvent.code < 4300) {\n      return 'retry';\n    } else {\n      // unknown error\n      return 'refused';\n    }\n  },\n\n  /**\n   * Returns an error or null basing on the close event.\n   *\n   * Null is returned when connection was closed cleanly. Otherwise, an object\n   * with error details is returned.\n   *\n   * @param  {CloseEvent} closeEvent\n   * @return {Object} error object\n   */\n  getCloseError: function(closeEvent): any {\n    if (closeEvent.code !== 1000 && closeEvent.code !== 1001) {\n      return {\n        type: 'PusherError',\n        data: {\n          code: closeEvent.code,\n          message: closeEvent.reason || closeEvent.message\n        }\n      };\n    } else {\n      return null;\n    }\n  }\n};\n\nexport default Protocol;\n","import * as Collections from '../utils/collections';\nimport { default as EventsDispatcher } from '../events/dispatcher';\nimport Protocol from './protocol/protocol';\nimport { PusherEvent } from './protocol/message-types';\nimport Logger from '../logger';\nimport TransportConnection from '../transports/transport_connection';\nimport Socket from '../socket';\n/**\n * Provides Pusher protocol interface for transports.\n *\n * Emits following events:\n * - message - on received messages\n * - ping - on ping requests\n * - pong - on pong responses\n * - error - when the transport emits an error\n * - closed - after closing the transport\n *\n * It also emits more events when connection closes with a code.\n * See Protocol.getCloseAction to get more details.\n *\n * @param {Number} id\n * @param {AbstractTransport} transport\n */\nexport default class Connection extends EventsDispatcher implements Socket {\n  id: string;\n  transport: TransportConnection;\n  activityTimeout: number;\n\n  constructor(id: string, transport: TransportConnection) {\n    super();\n    this.id = id;\n    this.transport = transport;\n    this.activityTimeout = transport.activityTimeout;\n    this.bindListeners();\n  }\n\n  /** Returns whether used transport handles activity checks by itself\n   *\n   * @returns {Boolean} true if activity checks are handled by the transport\n   */\n  handlesActivityChecks() {\n    return this.transport.handlesActivityChecks();\n  }\n\n  /** Sends raw data.\n   *\n   * @param {String} data\n   */\n  send(data: any): boolean {\n    return this.transport.send(data);\n  }\n\n  /** Sends an event.\n   *\n   * @param {String} name\n   * @param {String} data\n   * @param {String} [channel]\n   * @returns {Boolean} whether message was sent or not\n   */\n  send_event(name: string, data: any, channel?: string): boolean {\n    var event: PusherEvent = { event: name, data: data };\n    if (channel) {\n      event.channel = channel;\n    }\n    Logger.debug('Event sent', event);\n    return this.send(Protocol.encodeMessage(event));\n  }\n\n  /** Sends a ping message to the server.\n   *\n   * Basing on the underlying transport, it might send either transport's\n   * protocol-specific ping or pusher:ping event.\n   */\n  ping() {\n    if (this.transport.supportsPing()) {\n      this.transport.ping();\n    } else {\n      this.send_event('pusher:ping', {});\n    }\n  }\n\n  /** Closes the connection. */\n  close() {\n    this.transport.close();\n  }\n\n  private bindListeners() {\n    var listeners = {\n      message: (messageEvent: MessageEvent) => {\n        var pusherEvent;\n        try {\n          pusherEvent = Protocol.decodeMessage(messageEvent);\n        } catch (e) {\n          this.emit('error', {\n            type: 'MessageParseError',\n            error: e,\n            data: messageEvent.data\n          });\n        }\n\n        if (pusherEvent !== undefined) {\n          Logger.debug('Event recd', pusherEvent);\n\n          switch (pusherEvent.event) {\n            case 'pusher:error':\n              this.emit('error', {\n                type: 'PusherError',\n                data: pusherEvent.data\n              });\n              break;\n            case 'pusher:ping':\n              this.emit('ping');\n              break;\n            case 'pusher:pong':\n              this.emit('pong');\n              break;\n          }\n          this.emit('message', pusherEvent);\n        }\n      },\n      activity: () => {\n        this.emit('activity');\n      },\n      error: error => {\n        this.emit('error', error);\n      },\n      closed: closeEvent => {\n        unbindListeners();\n\n        if (closeEvent && closeEvent.code) {\n          this.handleCloseEvent(closeEvent);\n        }\n\n        this.transport = null;\n        this.emit('closed');\n      }\n    };\n\n    var unbindListeners = () => {\n      Collections.objectApply(listeners, (listener, event) => {\n        this.transport.unbind(event, listener);\n      });\n    };\n\n    Collections.objectApply(listeners, (listener, event) => {\n      this.transport.bind(event, listener);\n    });\n  }\n\n  private handleCloseEvent(closeEvent: any) {\n    var action = Protocol.getCloseAction(closeEvent);\n    var error = Protocol.getCloseError(closeEvent);\n    if (error) {\n      this.emit('error', error);\n    }\n    if (action) {\n      this.emit(action, { action: action, error: error });\n    }\n  }\n}\n","import Util from '../../util';\nimport * as Collections from '../../utils/collections';\nimport Protocol from '../protocol/protocol';\nimport Connection from '../connection';\nimport TransportConnection from '../../transports/transport_connection';\nimport HandshakePayload from './handshake_payload';\n\n/**\n * Handles Pusher protocol handshakes for transports.\n *\n * Calls back with a result object after handshake is completed. Results\n * always have two fields:\n * - action - string describing action to be taken after the handshake\n * - transport - the transport object passed to the constructor\n *\n * Different actions can set different additional properties on the result.\n * In the case of 'connected' action, there will be a 'connection' property\n * containing a Connection object for the transport. Other actions should\n * carry an 'error' property.\n *\n * @param {AbstractTransport} transport\n * @param {Function} callback\n */\nexport default class Handshake {\n  transport: TransportConnection;\n  callback: (HandshakePayload) => void;\n  onMessage: Function;\n  onClosed: Function;\n\n  constructor(\n    transport: TransportConnection,\n    callback: (HandshakePayload) => void\n  ) {\n    this.transport = transport;\n    this.callback = callback;\n    this.bindListeners();\n  }\n\n  close() {\n    this.unbindListeners();\n    this.transport.close();\n  }\n\n  private bindListeners() {\n    this.onMessage = m => {\n      this.unbindListeners();\n\n      var result;\n      try {\n        result = Protocol.processHandshake(m);\n      } catch (e) {\n        this.finish('error', { error: e });\n        this.transport.close();\n        return;\n      }\n\n      if (result.action === 'connected') {\n        this.finish('connected', {\n          connection: new Connection(result.id, this.transport),\n          activityTimeout: result.activityTimeout\n        });\n      } else {\n        this.finish(result.action, { error: result.error });\n        this.transport.close();\n      }\n    };\n\n    this.onClosed = closeEvent => {\n      this.unbindListeners();\n\n      var action = Protocol.getCloseAction(closeEvent) || 'backoff';\n      var error = Protocol.getCloseError(closeEvent);\n      this.finish(action, { error: error });\n    };\n\n    this.transport.bind('message', this.onMessage);\n    this.transport.bind('closed', this.onClosed);\n  }\n\n  private unbindListeners() {\n    this.transport.unbind('message', this.onMessage);\n    this.transport.unbind('closed', this.onClosed);\n  }\n\n  private finish(action: string, params: any) {\n    this.callback(\n      Collections.extend({ transport: this.transport, action: action }, params)\n    );\n  }\n}\n","import * as Collections from '../utils/collections';\nimport Util from '../util';\nimport base64encode from '../base64';\nimport Timeline from './timeline';\nimport Runtime from 'runtime';\n\nexport interface TimelineSenderOptions {\n  host?: string;\n  port?: number;\n  path?: string;\n}\n\nexport default class TimelineSender {\n  timeline: Timeline;\n  options: TimelineSenderOptions;\n  host: string;\n\n  constructor(timeline: Timeline, options: TimelineSenderOptions) {\n    this.timeline = timeline;\n    this.options = options || {};\n  }\n\n  send(useTLS: boolean, callback?: Function) {\n    if (this.timeline.isEmpty()) {\n      return;\n    }\n\n    this.timeline.send(\n      Runtime.TimelineTransport.getAgent(this, useTLS),\n      callback\n    );\n  }\n}\n","/** Error classes used throughout the library. */\n// https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\nexport class BadEventName extends Error {\n  constructor(msg?: string) {\n    super(msg);\n\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\nexport class RequestTimedOut extends Error {\n  constructor(msg?: string) {\n    super(msg);\n\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\nexport class TransportPriorityTooLow extends Error {\n  constructor(msg?: string) {\n    super(msg);\n\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\nexport class TransportClosed extends Error {\n  constructor(msg?: string) {\n    super(msg);\n\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\nexport class UnsupportedFeature extends Error {\n  constructor(msg?: string) {\n    super(msg);\n\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\nexport class UnsupportedTransport extends Error {\n  constructor(msg?: string) {\n    super(msg);\n\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\nexport class UnsupportedStrategy extends Error {\n  constructor(msg?: string) {\n    super(msg);\n\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\nexport class HTTPAuthError extends Error {\n  status: number;\n  constructor(status: number, msg?: string) {\n    super(msg);\n    this.status = status;\n\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n","/**\n * A place to store help URLs for error messages etc\n */\n\nconst urlStore = {\n  baseUrl: 'https://pusher.com',\n  urls: {\n    authenticationEndpoint: {\n      path: '/docs/authenticating_users'\n    },\n    javascriptQuickStart: {\n      path: '/docs/javascript_quick_start'\n    },\n    triggeringClientEvents: {\n      path: '/docs/client_api_guide/client_events#trigger-events'\n    },\n    encryptedChannelSupport: {\n      fullUrl:\n        'https://github.com/pusher/pusher-js/tree/cc491015371a4bde5743d1c87a0fbac0feb53195#encrypted-channel-support'\n    }\n  }\n};\n\n/** Builds a consistent string with links to pusher documentation\n *\n * @param {string} key - relevant key in the url_store.urls object\n * @return {string} suffix string to append to log message\n */\nconst buildLogSuffix = function(key: string): string {\n  const urlPrefix = 'See:';\n  const urlObj = urlStore.urls[key];\n  if (!urlObj) return '';\n\n  let url;\n  if (urlObj.fullUrl) {\n    url = urlObj.fullUrl;\n  } else if (urlObj.path) {\n    url = urlStore.baseUrl + urlObj.path;\n  }\n\n  if (!url) return '';\n  return `${urlPrefix} ${url}`;\n};\n\nexport default { buildLogSuffix };\n","import { default as EventsDispatcher } from '../events/dispatcher';\nimport * as Errors from '../errors';\nimport Logger from '../logger';\nimport Pusher from '../pusher';\nimport { PusherEvent } from '../connection/protocol/message-types';\nimport Metadata from './metadata';\nimport UrlStore from '../utils/url_store';\nimport { ChannelAuthorizationData, ChannelAuthorizationCallback } from '../auth/options';\nimport { HTTPAuthError } from '../errors';\n\n/** Provides base public channel interface with an event emitter.\n *\n * Emits:\n * - pusher:subscription_succeeded - after subscribing successfully\n * - other non-internal events\n *\n * @param {String} name\n * @param {Pusher} pusher\n */\nexport default class Channel extends EventsDispatcher {\n  name: string;\n  pusher: Pusher;\n  subscribed: boolean;\n  subscriptionPending: boolean;\n  subscriptionCancelled: boolean;\n\n  constructor(name: string, pusher: Pusher) {\n    super(function(event, data) {\n      Logger.debug('No callbacks on ' + name + ' for ' + event);\n    });\n\n    this.name = name;\n    this.pusher = pusher;\n    this.subscribed = false;\n    this.subscriptionPending = false;\n    this.subscriptionCancelled = false;\n  }\n\n  /** Skips authorization, since public channels don't require it.\n   *\n   * @param {Function} callback\n   */\n  authorize(socketId: string, callback: ChannelAuthorizationCallback) {\n    return callback(null, { auth: '' });\n  }\n\n  /** Triggers an event */\n  trigger(event: string, data: any) {\n    if (event.indexOf('client-') !== 0) {\n      throw new Errors.BadEventName(\n        \"Event '\" + event + \"' does not start with 'client-'\"\n      );\n    }\n    if (!this.subscribed) {\n      var suffix = UrlStore.buildLogSuffix('triggeringClientEvents');\n      Logger.warn(\n        `Client event triggered before channel 'subscription_succeeded' event . ${suffix}`\n      );\n    }\n    return this.pusher.send_event(event, data, this.name);\n  }\n\n  /** Signals disconnection to the channel. For internal use only. */\n  disconnect() {\n    this.subscribed = false;\n    this.subscriptionPending = false;\n  }\n\n  /** Handles a PusherEvent. For internal use only.\n   *\n   * @param {PusherEvent} event\n   */\n  handleEvent(event: PusherEvent) {\n    var eventName = event.event;\n    var data = event.data;\n    if (eventName === 'pusher_internal:subscription_succeeded') {\n      this.handleSubscriptionSucceededEvent(event);\n    } else if (eventName.indexOf('pusher_internal:') !== 0) {\n      var metadata: Metadata = {};\n      this.emit(eventName, data, metadata);\n    }\n  }\n\n  handleSubscriptionSucceededEvent(event: PusherEvent) {\n    this.subscriptionPending = false;\n    this.subscribed = true;\n    if (this.subscriptionCancelled) {\n      this.pusher.unsubscribe(this.name);\n    } else {\n      this.emit('pusher:subscription_succeeded', event.data);\n    }\n  }\n\n  /** Sends a subscription request. For internal use only. */\n  subscribe() {\n    if (this.subscribed) {\n      return;\n    }\n    this.subscriptionPending = true;\n    this.subscriptionCancelled = false;\n    this.authorize(\n      this.pusher.connection.socket_id,\n      (error: Error | null, data: ChannelAuthorizationData) => {\n        if (error) {\n          this.subscriptionPending = false;\n          // Why not bind to 'pusher:subscription_error' a level up, and log there?\n          // Binding to this event would cause the warning about no callbacks being\n          // bound (see constructor) to be suppressed, that's not what we want.\n          Logger.error(error.toString());\n          this.emit(\n            'pusher:subscription_error',\n            Object.assign(\n              {},\n              {\n                type: 'AuthError',\n                error: error.message\n              },\n              error instanceof HTTPAuthError ? { status: error.status } : {}\n            )\n          );\n        } else {\n          this.pusher.send_event('pusher:subscribe', {\n            auth: data.auth,\n            channel_data: data.channel_data,\n            channel: this.name\n          });\n        }\n      }\n    );\n  }\n\n  /** Sends an unsubscription request. For internal use only. */\n  unsubscribe() {\n    this.subscribed = false;\n    this.pusher.send_event('pusher:unsubscribe', {\n      channel: this.name\n    });\n  }\n\n  /** Cancels an in progress subscription. For internal use only. */\n  cancelSubscription() {\n    this.subscriptionCancelled = true;\n  }\n\n  /** Reinstates an in progress subscripiton. For internal use only. */\n  reinstateSubscription() {\n    this.subscriptionCancelled = false;\n  }\n}\n","import Factory from '../utils/factory';\nimport Channel from './channel';\nimport { ChannelAuthorizationCallback } from '../auth/options';\n\n/** Extends public channels to provide private channel interface.\n *\n * @param {String} name\n * @param {Pusher} pusher\n */\nexport default class PrivateChannel extends Channel {\n  /** Authorizes the connection to use the channel.\n   *\n   * @param  {String} socketId\n   * @param  {Function} callback\n   */\n  authorize(socketId: string, callback: ChannelAuthorizationCallback) {\n    return this.pusher.config.channelAuthorizer(\n      {\n        channelName: this.name,\n        socketId: socketId\n      },\n      callback\n    );\n  }\n}\n","import * as Collections from '../utils/collections';\n\n/** Represents a collection of members of a presence channel. */\nexport default class Members {\n  members: any;\n  count: number;\n  myID: any;\n  me: any;\n\n  constructor() {\n    this.reset();\n  }\n\n  /** Returns member's info for given id.\n   *\n   * Resulting object containts two fields - id and info.\n   *\n   * @param {Number} id\n   * @return {Object} member's info or null\n   */\n  get(id: string): any {\n    if (Object.prototype.hasOwnProperty.call(this.members, id)) {\n      return {\n        id: id,\n        info: this.members[id]\n      };\n    } else {\n      return null;\n    }\n  }\n\n  /** Calls back for each member in unspecified order.\n   *\n   * @param  {Function} callback\n   */\n  each(callback: Function) {\n    Collections.objectApply(this.members, (member, id) => {\n      callback(this.get(id));\n    });\n  }\n\n  /** Updates the id for connected member. For internal use only. */\n  setMyID(id: string) {\n    this.myID = id;\n  }\n\n  /** Handles subscription data. For internal use only. */\n  onSubscription(subscriptionData: any) {\n    this.members = subscriptionData.presence.hash;\n    this.count = subscriptionData.presence.count;\n    this.me = this.get(this.myID);\n  }\n\n  /** Adds a new member to the collection. For internal use only. */\n  addMember(memberData: any) {\n    if (this.get(memberData.user_id) === null) {\n      this.count++;\n    }\n    this.members[memberData.user_id] = memberData.user_info;\n    return this.get(memberData.user_id);\n  }\n\n  /** Adds a member from the collection. For internal use only. */\n  removeMember(memberData: any) {\n    var member = this.get(memberData.user_id);\n    if (member) {\n      delete this.members[memberData.user_id];\n      this.count--;\n    }\n    return member;\n  }\n\n  /** Resets the collection to the initial state. For internal use only. */\n  reset() {\n    this.members = {};\n    this.count = 0;\n    this.myID = null;\n    this.me = null;\n  }\n}\n","import PrivateChannel from './private_channel';\nimport Logger from '../logger';\nimport Members from './members';\nimport Pusher from '../pusher';\nimport UrlStore from 'core/utils/url_store';\nimport { PusherEvent } from '../connection/protocol/message-types';\nimport Metadata from './metadata';\nimport { ChannelAuthorizationData } from '../auth/options';\n\nexport default class PresenceChannel extends PrivateChannel {\n  members: Members;\n\n  /** Adds presence channel functionality to private channels.\n   *\n   * @param {String} name\n   * @param {Pusher} pusher\n   */\n  constructor(name: string, pusher: Pusher) {\n    super(name, pusher);\n    this.members = new Members();\n  }\n\n  /** Authenticates the connection as a member of the channel.\n   *\n   * @param  {String} socketId\n   * @param  {Function} callback\n   */\n  authorize(socketId: string, callback: Function) {\n    super.authorize(socketId, (error, authData) => {\n      if (!error) {\n        authData = authData as ChannelAuthorizationData;\n        if (authData.channel_data === undefined) {\n          let suffix = UrlStore.buildLogSuffix('authenticationEndpoint');\n          Logger.error(\n            `Invalid auth response for channel '${this.name}',` +\n              `expected 'channel_data' field. ${suffix}`\n          );\n          callback('Invalid auth response');\n          return;\n        }\n        var channelData = JSON.parse(authData.channel_data);\n        this.members.setMyID(channelData.user_id);\n      }\n      callback(error, authData);\n    });\n  }\n\n  /** Handles presence and subscription events. For internal use only.\n   *\n   * @param {PusherEvent} event\n   */\n  handleEvent(event: PusherEvent) {\n    var eventName = event.event;\n    if (eventName.indexOf('pusher_internal:') === 0) {\n      this.handleInternalEvent(event);\n    } else {\n      var data = event.data;\n      var metadata: Metadata = {};\n      if (event.user_id) {\n        metadata.user_id = event.user_id;\n      }\n      this.emit(eventName, data, metadata);\n    }\n  }\n  handleInternalEvent(event: PusherEvent) {\n    var eventName = event.event;\n    var data = event.data;\n    switch (eventName) {\n      case 'pusher_internal:subscription_succeeded':\n        this.handleSubscriptionSucceededEvent(event);\n        break;\n      case 'pusher_internal:member_added':\n        var addedMember = this.members.addMember(data);\n        this.emit('pusher:member_added', addedMember);\n        break;\n      case 'pusher_internal:member_removed':\n        var removedMember = this.members.removeMember(data);\n        if (removedMember) {\n          this.emit('pusher:member_removed', removedMember);\n        }\n        break;\n    }\n  }\n\n  handleSubscriptionSucceededEvent(event: PusherEvent) {\n    this.subscriptionPending = false;\n    this.subscribed = true;\n    if (this.subscriptionCancelled) {\n      this.pusher.unsubscribe(this.name);\n    } else {\n      this.members.onSubscription(event.data);\n      this.emit('pusher:subscription_succeeded', this.members);\n    }\n  }\n\n  /** Resets the channel state, including members map. For internal use only. */\n  disconnect() {\n    this.members.reset();\n    super.disconnect();\n  }\n}\n","import PrivateChannel from './private_channel';\nimport * as Errors from '../errors';\nimport Logger from '../logger';\nimport Pusher from '../pusher';\nimport { decode as encodeUTF8 } from '@stablelib/utf8';\nimport { decode as decodeBase64 } from '@stablelib/base64';\nimport Dispatcher from '../events/dispatcher';\nimport { PusherEvent } from '../connection/protocol/message-types';\nimport { ChannelAuthorizationData, ChannelAuthorizationCallback } from '../auth/options';\nimport * as nacl from 'tweetnacl';\n\n/** Extends private channels to provide encrypted channel interface.\n *\n * @param {String} name\n * @param {Pusher} pusher\n */\nexport default class EncryptedChannel extends PrivateChannel {\n  key: Uint8Array = null;\n  nacl: nacl;\n\n  constructor(name: string, pusher: Pusher, nacl: nacl) {\n    super(name, pusher);\n    this.nacl = nacl;\n  }\n\n  /** Authorizes the connection to use the channel.\n   *\n   * @param  {String} socketId\n   * @param  {Function} callback\n   */\n  authorize(socketId: string, callback: ChannelAuthorizationCallback) {\n    super.authorize(\n      socketId,\n      (error: Error | null, authData: ChannelAuthorizationData) => {\n        if (error) {\n          callback(error, authData);\n          return;\n        }\n        let sharedSecret = authData['shared_secret'];\n        if (!sharedSecret) {\n          callback(\n            new Error(\n              `No shared_secret key in auth payload for encrypted channel: ${this.name}`\n            ),\n            null\n          );\n          return;\n        }\n        this.key = decodeBase64(sharedSecret);\n        delete authData['shared_secret'];\n        callback(null, authData);\n      }\n    );\n  }\n\n  trigger(event: string, data: any): boolean {\n    throw new Errors.UnsupportedFeature(\n      'Client events are not currently supported for encrypted channels'\n    );\n  }\n\n  /** Handles an event. For internal use only.\n   *\n   * @param {PusherEvent} event\n   */\n  handleEvent(event: PusherEvent) {\n    var eventName = event.event;\n    var data = event.data;\n    if (\n      eventName.indexOf('pusher_internal:') === 0 ||\n      eventName.indexOf('pusher:') === 0\n    ) {\n      super.handleEvent(event);\n      return;\n    }\n    this.handleEncryptedEvent(eventName, data);\n  }\n\n  private handleEncryptedEvent(event: string, data: any): void {\n    if (!this.key) {\n      Logger.debug(\n        'Received encrypted event before key has been retrieved from the authEndpoint'\n      );\n      return;\n    }\n    if (!data.ciphertext || !data.nonce) {\n      Logger.error(\n        'Unexpected format for encrypted event, expected object with `ciphertext` and `nonce` fields, got: ' +\n          data\n      );\n      return;\n    }\n    let cipherText = decodeBase64(data.ciphertext);\n    if (cipherText.length < this.nacl.secretbox.overheadLength) {\n      Logger.error(\n        `Expected encrypted event ciphertext length to be ${this.nacl.secretbox.overheadLength}, got: ${cipherText.length}`\n      );\n      return;\n    }\n    let nonce = decodeBase64(data.nonce);\n    if (nonce.length < this.nacl.secretbox.nonceLength) {\n      Logger.error(\n        `Expected encrypted event nonce length to be ${this.nacl.secretbox.nonceLength}, got: ${nonce.length}`\n      );\n      return;\n    }\n\n    let bytes = this.nacl.secretbox.open(cipherText, nonce, this.key);\n    if (bytes === null) {\n      Logger.debug(\n        'Failed to decrypt an event, probably because it was encrypted with a different key. Fetching a new key from the authEndpoint...'\n      );\n      // Try a single time to retrieve a new auth key and decrypt the event with it\n      // If this fails, a new key will be requested when a new message is received\n      this.authorize(this.pusher.connection.socket_id, (error, authData) => {\n        if (error) {\n          Logger.error(\n            `Failed to make a request to the authEndpoint: ${authData}. Unable to fetch new key, so dropping encrypted event`\n          );\n          return;\n        }\n        bytes = this.nacl.secretbox.open(cipherText, nonce, this.key);\n        if (bytes === null) {\n          Logger.error(\n            `Failed to decrypt event with new key. Dropping encrypted event`\n          );\n          return;\n        }\n        this.emit(event, this.getDataToEmit(bytes));\n        return;\n      });\n      return;\n    }\n    this.emit(event, this.getDataToEmit(bytes));\n  }\n\n  // Try and parse the decrypted bytes as JSON. If we can't parse it, just\n  // return the utf-8 string\n  getDataToEmit(bytes: Uint8Array): string {\n    let raw = encodeUTF8(bytes);\n    try {\n      return JSON.parse(raw);\n    } catch {\n      return raw;\n    }\n  }\n}\n","import { default as EventsDispatcher } from '../events/dispatcher';\nimport { OneOffTimer as Timer } from '../utils/timers';\nimport { Config } from '../config';\nimport Logger from '../logger';\nimport HandshakePayload from './handshake/handshake_payload';\nimport Connection from './connection';\nimport Strategy from '../strategies/strategy';\nimport StrategyRunner from '../strategies/strategy_runner';\nimport * as Collections from '../utils/collections';\nimport Timeline from '../timeline/timeline';\nimport ConnectionManagerOptions from './connection_manager_options';\nimport Runtime from 'runtime';\n\nimport {\n  ErrorCallbacks,\n  HandshakeCallbacks,\n  ConnectionCallbacks\n} from './callbacks';\nimport Action from './protocol/action';\n\n/** Manages connection to Pusher.\n *\n * Uses a strategy (currently only default), timers and network availability\n * info to establish a connection and export its state. In case of failures,\n * manages reconnection attempts.\n *\n * Exports state changes as following events:\n * - \"state_change\", { previous: p, current: state }\n * - state\n *\n * States:\n * - initialized - initial state, never transitioned to\n * - connecting - connection is being established\n * - connected - connection has been fully established\n * - disconnected - on requested disconnection\n * - unavailable - after connection timeout or when there's no network\n * - failed - when the connection strategy is not supported\n *\n * Options:\n * - unavailableTimeout - time to transition to unavailable state\n * - activityTimeout - time after which ping message should be sent\n * - pongTimeout - time for Pusher to respond with pong before reconnecting\n *\n * @param {String} key application key\n * @param {Object} options\n */\nexport default class ConnectionManager extends EventsDispatcher {\n  key: string;\n  options: ConnectionManagerOptions;\n  state: string;\n  connection: Connection;\n  usingTLS: boolean;\n  timeline: Timeline;\n  socket_id: string;\n  unavailableTimer: Timer;\n  activityTimer: Timer;\n  retryTimer: Timer;\n  activityTimeout: number;\n  strategy: Strategy;\n  runner: StrategyRunner;\n  errorCallbacks: ErrorCallbacks;\n  handshakeCallbacks: HandshakeCallbacks;\n  connectionCallbacks: ConnectionCallbacks;\n\n  constructor(key: string, options: ConnectionManagerOptions) {\n    super();\n    this.state = 'initialized';\n    this.connection = null;\n\n    this.key = key;\n    this.options = options;\n    this.timeline = this.options.timeline;\n    this.usingTLS = this.options.useTLS;\n\n    this.errorCallbacks = this.buildErrorCallbacks();\n    this.connectionCallbacks = this.buildConnectionCallbacks(\n      this.errorCallbacks\n    );\n    this.handshakeCallbacks = this.buildHandshakeCallbacks(this.errorCallbacks);\n\n    var Network = Runtime.getNetwork();\n\n    Network.bind('online', () => {\n      this.timeline.info({ netinfo: 'online' });\n      if (this.state === 'connecting' || this.state === 'unavailable') {\n        this.retryIn(0);\n      }\n    });\n    Network.bind('offline', () => {\n      this.timeline.info({ netinfo: 'offline' });\n      if (this.connection) {\n        this.sendActivityCheck();\n      }\n    });\n\n    this.updateStrategy();\n  }\n\n  /** Establishes a connection to Pusher.\n   *\n   * Does nothing when connection is already established. See top-level doc\n   * to find events emitted on connection attempts.\n   */\n  connect() {\n    if (this.connection || this.runner) {\n      return;\n    }\n    if (!this.strategy.isSupported()) {\n      this.updateState('failed');\n      return;\n    }\n    this.updateState('connecting');\n    this.startConnecting();\n    this.setUnavailableTimer();\n  }\n\n  /** Sends raw data.\n   *\n   * @param {String} data\n   */\n  send(data) {\n    if (this.connection) {\n      return this.connection.send(data);\n    } else {\n      return false;\n    }\n  }\n\n  /** Sends an event.\n   *\n   * @param {String} name\n   * @param {String} data\n   * @param {String} [channel]\n   * @returns {Boolean} whether message was sent or not\n   */\n  send_event(name: string, data: any, channel?: string) {\n    if (this.connection) {\n      return this.connection.send_event(name, data, channel);\n    } else {\n      return false;\n    }\n  }\n\n  /** Closes the connection. */\n  disconnect() {\n    this.disconnectInternally();\n    this.updateState('disconnected');\n  }\n\n  isUsingTLS() {\n    return this.usingTLS;\n  }\n\n  private startConnecting() {\n    var callback = (error, handshake) => {\n      if (error) {\n        this.runner = this.strategy.connect(0, callback);\n      } else {\n        if (handshake.action === 'error') {\n          this.emit('error', {\n            type: 'HandshakeError',\n            error: handshake.error\n          });\n          this.timeline.error({ handshakeError: handshake.error });\n        } else {\n          this.abortConnecting(); // we don't support switching connections yet\n          this.handshakeCallbacks[handshake.action](handshake);\n        }\n      }\n    };\n    this.runner = this.strategy.connect(0, callback);\n  }\n\n  private abortConnecting() {\n    if (this.runner) {\n      this.runner.abort();\n      this.runner = null;\n    }\n  }\n\n  private disconnectInternally() {\n    this.abortConnecting();\n    this.clearRetryTimer();\n    this.clearUnavailableTimer();\n    if (this.connection) {\n      var connection = this.abandonConnection();\n      connection.close();\n    }\n  }\n\n  private updateStrategy() {\n    this.strategy = this.options.getStrategy({\n      key: this.key,\n      timeline: this.timeline,\n      useTLS: this.usingTLS\n    });\n  }\n\n  private retryIn(delay) {\n    this.timeline.info({ action: 'retry', delay: delay });\n    if (delay > 0) {\n      this.emit('connecting_in', Math.round(delay / 1000));\n    }\n    this.retryTimer = new Timer(delay || 0, () => {\n      this.disconnectInternally();\n      this.connect();\n    });\n  }\n\n  private clearRetryTimer() {\n    if (this.retryTimer) {\n      this.retryTimer.ensureAborted();\n      this.retryTimer = null;\n    }\n  }\n\n  private setUnavailableTimer() {\n    this.unavailableTimer = new Timer(this.options.unavailableTimeout, () => {\n      this.updateState('unavailable');\n    });\n  }\n\n  private clearUnavailableTimer() {\n    if (this.unavailableTimer) {\n      this.unavailableTimer.ensureAborted();\n    }\n  }\n\n  private sendActivityCheck() {\n    this.stopActivityCheck();\n    this.connection.ping();\n    // wait for pong response\n    this.activityTimer = new Timer(this.options.pongTimeout, () => {\n      this.timeline.error({ pong_timed_out: this.options.pongTimeout });\n      this.retryIn(0);\n    });\n  }\n\n  private resetActivityCheck() {\n    this.stopActivityCheck();\n    // send ping after inactivity\n    if (this.connection && !this.connection.handlesActivityChecks()) {\n      this.activityTimer = new Timer(this.activityTimeout, () => {\n        this.sendActivityCheck();\n      });\n    }\n  }\n\n  private stopActivityCheck() {\n    if (this.activityTimer) {\n      this.activityTimer.ensureAborted();\n    }\n  }\n\n  private buildConnectionCallbacks(\n    errorCallbacks: ErrorCallbacks\n  ): ConnectionCallbacks {\n    return Collections.extend<ConnectionCallbacks>({}, errorCallbacks, {\n      message: message => {\n        // includes pong messages from server\n        this.resetActivityCheck();\n        this.emit('message', message);\n      },\n      ping: () => {\n        this.send_event('pusher:pong', {});\n      },\n      activity: () => {\n        this.resetActivityCheck();\n      },\n      error: error => {\n        // just emit error to user - socket will already be closed by browser\n        this.emit('error', error);\n      },\n      closed: () => {\n        this.abandonConnection();\n        if (this.shouldRetry()) {\n          this.retryIn(1000);\n        }\n      }\n    });\n  }\n\n  private buildHandshakeCallbacks(\n    errorCallbacks: ErrorCallbacks\n  ): HandshakeCallbacks {\n    return Collections.extend<HandshakeCallbacks>({}, errorCallbacks, {\n      connected: (handshake: HandshakePayload) => {\n        this.activityTimeout = Math.min(\n          this.options.activityTimeout,\n          handshake.activityTimeout,\n          handshake.connection.activityTimeout || Infinity\n        );\n        this.clearUnavailableTimer();\n        this.setConnection(handshake.connection);\n        this.socket_id = this.connection.id;\n        this.updateState('connected', { socket_id: this.socket_id });\n      }\n    });\n  }\n\n  private buildErrorCallbacks(): ErrorCallbacks {\n    let withErrorEmitted = callback => {\n      return (result: Action | HandshakePayload) => {\n        if (result.error) {\n          this.emit('error', { type: 'WebSocketError', error: result.error });\n        }\n        callback(result);\n      };\n    };\n\n    return {\n      tls_only: withErrorEmitted(() => {\n        this.usingTLS = true;\n        this.updateStrategy();\n        this.retryIn(0);\n      }),\n      refused: withErrorEmitted(() => {\n        this.disconnect();\n      }),\n      backoff: withErrorEmitted(() => {\n        this.retryIn(1000);\n      }),\n      retry: withErrorEmitted(() => {\n        this.retryIn(0);\n      })\n    };\n  }\n\n  private setConnection(connection) {\n    this.connection = connection;\n    for (var event in this.connectionCallbacks) {\n      this.connection.bind(event, this.connectionCallbacks[event]);\n    }\n    this.resetActivityCheck();\n  }\n\n  private abandonConnection() {\n    if (!this.connection) {\n      return;\n    }\n    this.stopActivityCheck();\n    for (var event in this.connectionCallbacks) {\n      this.connection.unbind(event, this.connectionCallbacks[event]);\n    }\n    var connection = this.connection;\n    this.connection = null;\n    return connection;\n  }\n\n  private updateState(newState: string, data?: any) {\n    var previousState = this.state;\n    this.state = newState;\n    if (previousState !== newState) {\n      var newStateDescription = newState;\n      if (newStateDescription === 'connected') {\n        newStateDescription += ' with new socket ID ' + data.socket_id;\n      }\n      Logger.debug(\n        'State changed',\n        previousState + ' -> ' + newStateDescription\n      );\n      this.timeline.info({ state: newState, params: data });\n      this.emit('state_change', { previous: previousState, current: newState });\n      this.emit(newState, data);\n    }\n  }\n\n  private shouldRetry(): boolean {\n    return this.state === 'connecting' || this.state === 'connected';\n  }\n}\n","import Channel from './channel';\nimport * as Collections from '../utils/collections';\nimport ChannelTable from './channel_table';\nimport Factory from '../utils/factory';\nimport Pusher from '../pusher';\nimport Logger from '../logger';\nimport * as Errors from '../errors';\nimport urlStore from '../utils/url_store';\n\n/** Handles a channel map. */\nexport default class Channels {\n  channels: ChannelTable;\n\n  constructor() {\n    this.channels = {};\n  }\n\n  /** Creates or retrieves an existing channel by its name.\n   *\n   * @param {String} name\n   * @param {Pusher} pusher\n   * @return {Channel}\n   */\n  add(name: string, pusher: Pusher) {\n    if (!this.channels[name]) {\n      this.channels[name] = createChannel(name, pusher);\n    }\n    return this.channels[name];\n  }\n\n  /** Returns a list of all channels\n   *\n   * @return {Array}\n   */\n  all(): Channel[] {\n    return Collections.values(this.channels);\n  }\n\n  /** Finds a channel by its name.\n   *\n   * @param {String} name\n   * @return {Channel} channel or null if it doesn't exist\n   */\n  find(name: string) {\n    return this.channels[name];\n  }\n\n  /** Removes a channel from the map.\n   *\n   * @param {String} name\n   */\n  remove(name: string) {\n    var channel = this.channels[name];\n    delete this.channels[name];\n    return channel;\n  }\n\n  /** Proxies disconnection signal to all channels. */\n  disconnect() {\n    Collections.objectApply(this.channels, function(channel) {\n      channel.disconnect();\n    });\n  }\n}\n\nfunction createChannel(name: string, pusher: Pusher): Channel {\n  if (name.indexOf('private-encrypted-') === 0) {\n    if (pusher.config.nacl) {\n      return Factory.createEncryptedChannel(name, pusher, pusher.config.nacl);\n    }\n    let errMsg =\n      'Tried to subscribe to a private-encrypted- channel but no nacl implementation available';\n    let suffix = urlStore.buildLogSuffix('encryptedChannelSupport');\n    throw new Errors.UnsupportedFeature(`${errMsg}. ${suffix}`);\n  } else if (name.indexOf('private-') === 0) {\n    return Factory.createPrivateChannel(name, pusher);\n  } else if (name.indexOf('presence-') === 0) {\n    return Factory.createPresenceChannel(name, pusher);\n  } else {\n    return Factory.createChannel(name, pusher);\n  }\n}\n","import AssistantToTheTransportManager from '../transports/assistant_to_the_transport_manager';\nimport PingDelayOptions from '../transports/ping_delay_options';\nimport Transport from '../transports/transport';\nimport TransportManager from '../transports/transport_manager';\nimport Handshake from '../connection/handshake';\nimport TransportConnection from '../transports/transport_connection';\nimport SocketHooks from '../http/socket_hooks';\nimport HTTPSocket from '../http/http_socket';\n\nimport Timeline from '../timeline/timeline';\nimport {\n  default as TimelineSender,\n  TimelineSenderOptions\n} from '../timeline/timeline_sender';\nimport PresenceChannel from '../channels/presence_channel';\nimport PrivateChannel from '../channels/private_channel';\nimport EncryptedChannel from '../channels/encrypted_channel';\nimport Channel from '../channels/channel';\nimport ConnectionManager from '../connection/connection_manager';\nimport ConnectionManagerOptions from '../connection/connection_manager_options';\nimport Ajax from '../http/ajax';\nimport Channels from '../channels/channels';\nimport Pusher from '../pusher';\nimport { Config } from '../config';\nimport * as nacl from 'tweetnacl';\n\nvar Factory = {\n  createChannels(): Channels {\n    return new Channels();\n  },\n\n  createConnectionManager(\n    key: string,\n    options: ConnectionManagerOptions\n  ): ConnectionManager {\n    return new ConnectionManager(key, options);\n  },\n\n  createChannel(name: string, pusher: Pusher): Channel {\n    return new Channel(name, pusher);\n  },\n\n  createPrivateChannel(name: string, pusher: Pusher): PrivateChannel {\n    return new PrivateChannel(name, pusher);\n  },\n\n  createPresenceChannel(name: string, pusher: Pusher): PresenceChannel {\n    return new PresenceChannel(name, pusher);\n  },\n\n  createEncryptedChannel(\n    name: string,\n    pusher: Pusher,\n    nacl: nacl\n  ): EncryptedChannel {\n    return new EncryptedChannel(name, pusher, nacl);\n  },\n\n  createTimelineSender(timeline: Timeline, options: TimelineSenderOptions) {\n    return new TimelineSender(timeline, options);\n  },\n\n  createHandshake(\n    transport: TransportConnection,\n    callback: (HandshakePayload) => void\n  ): Handshake {\n    return new Handshake(transport, callback);\n  },\n\n  createAssistantToTheTransportManager(\n    manager: TransportManager,\n    transport: Transport,\n    options: PingDelayOptions\n  ): AssistantToTheTransportManager {\n    return new AssistantToTheTransportManager(manager, transport, options);\n  }\n};\n\nexport default Factory;\n","import AssistantToTheTransportManager from './assistant_to_the_transport_manager';\nimport Transport from './transport';\nimport PingDelayOptions from './ping_delay_options';\nimport Factory from '../utils/factory';\n\nexport interface TransportManagerOptions extends PingDelayOptions {\n  lives?: number;\n}\n\n/** Keeps track of the number of lives left for a transport.\n *\n * In the beginning of a session, transports may be assigned a number of\n * lives. When an AssistantToTheTransportManager instance reports a transport\n * connection closed uncleanly, the transport loses a life. When the number\n * of lives drops to zero, the transport gets disabled by its manager.\n *\n * @param {Object} options\n */\nexport default class TransportManager {\n  options: TransportManagerOptions;\n  livesLeft: number;\n\n  constructor(options: TransportManagerOptions) {\n    this.options = options || {};\n    this.livesLeft = this.options.lives || Infinity;\n  }\n\n  /** Creates a assistant for the transport.\n   *\n   * @param {Transport} transport\n   * @returns {AssistantToTheTransportManager}\n   */\n  getAssistant(transport: Transport): AssistantToTheTransportManager {\n    return Factory.createAssistantToTheTransportManager(this, transport, {\n      minPingDelay: this.options.minPingDelay,\n      maxPingDelay: this.options.maxPingDelay\n    });\n  }\n\n  /** Returns whether the transport has any lives left.\n   *\n   * @returns {Boolean}\n   */\n  isAlive(): boolean {\n    return this.livesLeft > 0;\n  }\n\n  /** Takes one life from the transport. */\n  reportDeath() {\n    this.livesLeft -= 1;\n  }\n}\n","import * as Collections from '../utils/collections';\nimport Util from '../util';\nimport { OneOffTimer as Timer } from '../utils/timers';\nimport Strategy from './strategy';\nimport StrategyOptions from './strategy_options';\n\n/** Loops through strategies with optional timeouts.\n *\n * Options:\n * - loop - whether it should loop through the substrategy list\n * - timeout - initial timeout for a single substrategy\n * - timeoutLimit - maximum timeout\n *\n * @param {Strategy[]} strategies\n * @param {Object} options\n */\nexport default class SequentialStrategy implements Strategy {\n  strategies: Strategy[];\n  loop: boolean;\n  failFast: boolean;\n  timeout: number;\n  timeoutLimit: number;\n\n  constructor(strategies: Strategy[], options: StrategyOptions) {\n    this.strategies = strategies;\n    this.loop = Boolean(options.loop);\n    this.failFast = Boolean(options.failFast);\n    this.timeout = options.timeout;\n    this.timeoutLimit = options.timeoutLimit;\n  }\n\n  isSupported(): boolean {\n    return Collections.any(this.strategies, Util.method('isSupported'));\n  }\n\n  connect(minPriority: number, callback: Function) {\n    var strategies = this.strategies;\n    var current = 0;\n    var timeout = this.timeout;\n    var runner = null;\n\n    var tryNextStrategy = (error, handshake) => {\n      if (handshake) {\n        callback(null, handshake);\n      } else {\n        current = current + 1;\n        if (this.loop) {\n          current = current % strategies.length;\n        }\n\n        if (current < strategies.length) {\n          if (timeout) {\n            timeout = timeout * 2;\n            if (this.timeoutLimit) {\n              timeout = Math.min(timeout, this.timeoutLimit);\n            }\n          }\n          runner = this.tryStrategy(\n            strategies[current],\n            minPriority,\n            { timeout, failFast: this.failFast },\n            tryNextStrategy\n          );\n        } else {\n          callback(true);\n        }\n      }\n    };\n\n    runner = this.tryStrategy(\n      strategies[current],\n      minPriority,\n      { timeout: timeout, failFast: this.failFast },\n      tryNextStrategy\n    );\n\n    return {\n      abort: function() {\n        runner.abort();\n      },\n      forceMinPriority: function(p) {\n        minPriority = p;\n        if (runner) {\n          runner.forceMinPriority(p);\n        }\n      }\n    };\n  }\n\n  private tryStrategy(\n    strategy: Strategy,\n    minPriority: number,\n    options: StrategyOptions,\n    callback: Function\n  ) {\n    var timer = null;\n    var runner = null;\n\n    if (options.timeout > 0) {\n      timer = new Timer(options.timeout, function() {\n        runner.abort();\n        callback(true);\n      });\n    }\n\n    runner = strategy.connect(minPriority, function(error, handshake) {\n      if (error && timer && timer.isRunning() && !options.failFast) {\n        // advance to the next strategy after the timeout\n        return;\n      }\n      if (timer) {\n        timer.ensureAborted();\n      }\n      callback(error, handshake);\n    });\n\n    return {\n      abort: function() {\n        if (timer) {\n          timer.ensureAborted();\n        }\n        runner.abort();\n      },\n      forceMinPriority: function(p) {\n        runner.forceMinPriority(p);\n      }\n    };\n  }\n}\n","import * as Collections from '../utils/collections';\nimport Util from '../util';\nimport Strategy from './strategy';\n\n/** Launches all substrategies and emits prioritized connected transports.\n *\n * @param {Array} strategies\n */\nexport default class BestConnectedEverStrategy implements Strategy {\n  strategies: Strategy[];\n\n  constructor(strategies: Strategy[]) {\n    this.strategies = strategies;\n  }\n\n  isSupported(): boolean {\n    return Collections.any(this.strategies, Util.method('isSupported'));\n  }\n\n  connect(minPriority: number, callback: Function) {\n    return connect(this.strategies, minPriority, function(i, runners) {\n      return function(error, handshake) {\n        runners[i].error = error;\n        if (error) {\n          if (allRunnersFailed(runners)) {\n            callback(true);\n          }\n          return;\n        }\n        Collections.apply(runners, function(runner) {\n          runner.forceMinPriority(handshake.transport.priority);\n        });\n        callback(null, handshake);\n      };\n    });\n  }\n}\n\n/** Connects to all strategies in parallel.\n *\n * Callback builder should be a function that takes two arguments: index\n * and a list of runners. It should return another function that will be\n * passed to the substrategy with given index. Runners can be aborted using\n * abortRunner(s) functions from this class.\n *\n * @param  {Array} strategies\n * @param  {Function} callbackBuilder\n * @return {Object} strategy runner\n */\nfunction connect(\n  strategies: Strategy[],\n  minPriority: number,\n  callbackBuilder: Function\n) {\n  var runners = Collections.map(strategies, function(strategy, i, _, rs) {\n    return strategy.connect(minPriority, callbackBuilder(i, rs));\n  });\n  return {\n    abort: function() {\n      Collections.apply(runners, abortRunner);\n    },\n    forceMinPriority: function(p) {\n      Collections.apply(runners, function(runner) {\n        runner.forceMinPriority(p);\n      });\n    }\n  };\n}\n\nfunction allRunnersFailed(runners): boolean {\n  return Collections.all(runners, function(runner) {\n    return Boolean(runner.error);\n  });\n}\n\nfunction abortRunner(runner) {\n  if (!runner.error && !runner.aborted) {\n    runner.abort();\n    runner.aborted = true;\n  }\n}\n","import Util from '../util';\nimport Runtime from 'runtime';\nimport Strategy from './strategy';\nimport SequentialStrategy from './sequential_strategy';\nimport StrategyOptions from './strategy_options';\nimport TransportStrategy from './transport_strategy';\nimport Timeline from '../timeline/timeline';\nimport * as Collections from '../utils/collections';\n\nexport interface TransportStrategyDictionary {\n  [key: string]: TransportStrategy;\n}\n\n/** Caches last successful transport and uses it for following attempts.\n *\n * @param {Strategy} strategy\n * @param {Object} transports\n * @param {Object} options\n */\nexport default class CachedStrategy implements Strategy {\n  strategy: Strategy;\n  transports: TransportStrategyDictionary;\n  ttl: number;\n  usingTLS: boolean;\n  timeline: Timeline;\n\n  constructor(\n    strategy: Strategy,\n    transports: TransportStrategyDictionary,\n    options: StrategyOptions\n  ) {\n    this.strategy = strategy;\n    this.transports = transports;\n    this.ttl = options.ttl || 1800 * 1000;\n    this.usingTLS = options.useTLS;\n    this.timeline = options.timeline;\n  }\n\n  isSupported(): boolean {\n    return this.strategy.isSupported();\n  }\n\n  connect(minPriority: number, callback: Function) {\n    var usingTLS = this.usingTLS;\n    var info = fetchTransportCache(usingTLS);\n\n    var strategies = [this.strategy];\n    if (info && info.timestamp + this.ttl >= Util.now()) {\n      var transport = this.transports[info.transport];\n      if (transport) {\n        this.timeline.info({\n          cached: true,\n          transport: info.transport,\n          latency: info.latency\n        });\n        strategies.push(\n          new SequentialStrategy([transport], {\n            timeout: info.latency * 2 + 1000,\n            failFast: true\n          })\n        );\n      }\n    }\n\n    var startTimestamp = Util.now();\n    var runner = strategies\n      .pop()\n      .connect(minPriority, function cb(error, handshake) {\n        if (error) {\n          flushTransportCache(usingTLS);\n          if (strategies.length > 0) {\n            startTimestamp = Util.now();\n            runner = strategies.pop().connect(minPriority, cb);\n          } else {\n            callback(error);\n          }\n        } else {\n          storeTransportCache(\n            usingTLS,\n            handshake.transport.name,\n            Util.now() - startTimestamp\n          );\n          callback(null, handshake);\n        }\n      });\n\n    return {\n      abort: function() {\n        runner.abort();\n      },\n      forceMinPriority: function(p) {\n        minPriority = p;\n        if (runner) {\n          runner.forceMinPriority(p);\n        }\n      }\n    };\n  }\n}\n\nfunction getTransportCacheKey(usingTLS: boolean): string {\n  return 'pusherTransport' + (usingTLS ? 'TLS' : 'NonTLS');\n}\n\nfunction fetchTransportCache(usingTLS: boolean): any {\n  var storage = Runtime.getLocalStorage();\n  if (storage) {\n    try {\n      var serializedCache = storage[getTransportCacheKey(usingTLS)];\n      if (serializedCache) {\n        return JSON.parse(serializedCache);\n      }\n    } catch (e) {\n      flushTransportCache(usingTLS);\n    }\n  }\n  return null;\n}\n\nfunction storeTransportCache(\n  usingTLS: boolean,\n  transport: TransportStrategy,\n  latency: number\n) {\n  var storage = Runtime.getLocalStorage();\n  if (storage) {\n    try {\n      storage[getTransportCacheKey(usingTLS)] = Collections.safeJSONStringify({\n        timestamp: Util.now(),\n        transport: transport,\n        latency: latency\n      });\n    } catch (e) {\n      // catch over quota exceptions raised by localStorage\n    }\n  }\n}\n\nfunction flushTransportCache(usingTLS: boolean) {\n  var storage = Runtime.getLocalStorage();\n  if (storage) {\n    try {\n      delete storage[getTransportCacheKey(usingTLS)];\n    } catch (e) {\n      // catch exceptions raised by localStorage\n    }\n  }\n}\n","import { OneOffTimer as Timer } from '../utils/timers';\nimport Strategy from './strategy';\nimport StrategyOptions from './strategy_options';\n\n/** Runs substrategy after specified delay.\n *\n * Options:\n * - delay - time in miliseconds to delay the substrategy attempt\n *\n * @param {Strategy} strategy\n * @param {Object} options\n */\nexport default class DelayedStrategy implements Strategy {\n  strategy: Strategy;\n  options: { delay: number };\n\n  constructor(strategy: Strategy, { delay: number }) {\n    this.strategy = strategy;\n    this.options = { delay: number };\n  }\n\n  isSupported(): boolean {\n    return this.strategy.isSupported();\n  }\n\n  connect(minPriority: number, callback: Function) {\n    var strategy = this.strategy;\n    var runner;\n    var timer = new Timer(this.options.delay, function() {\n      runner = strategy.connect(minPriority, callback);\n    });\n\n    return {\n      abort: function() {\n        timer.ensureAborted();\n        if (runner) {\n          runner.abort();\n        }\n      },\n      forceMinPriority: function(p) {\n        minPriority = p;\n        if (runner) {\n          runner.forceMinPriority(p);\n        }\n      }\n    };\n  }\n}\n","import Strategy from './strategy';\nimport StrategyRunner from './strategy_runner';\n\n/** Proxies method calls to one of substrategies basing on the test function.\n *\n * @param {Function} test\n * @param {Strategy} trueBranch strategy used when test returns true\n * @param {Strategy} falseBranch strategy used when test returns false\n */\nexport default class IfStrategy implements Strategy {\n  test: () => boolean;\n  trueBranch: Strategy;\n  falseBranch: Strategy;\n\n  constructor(\n    test: () => boolean,\n    trueBranch: Strategy,\n    falseBranch: Strategy\n  ) {\n    this.test = test;\n    this.trueBranch = trueBranch;\n    this.falseBranch = falseBranch;\n  }\n\n  isSupported(): boolean {\n    var branch = this.test() ? this.trueBranch : this.falseBranch;\n    return branch.isSupported();\n  }\n\n  connect(minPriority: number, callback: Function): StrategyRunner {\n    var branch = this.test() ? this.trueBranch : this.falseBranch;\n    return branch.connect(minPriority, callback);\n  }\n}\n","import Strategy from './strategy';\nimport StrategyRunner from './strategy_runner';\n\n/** Launches the substrategy and terminates on the first open connection.\n *\n * @param {Strategy} strategy\n */\nexport default class FirstConnectedStrategy implements Strategy {\n  strategy: Strategy;\n\n  constructor(strategy: Strategy) {\n    this.strategy = strategy;\n  }\n\n  isSupported(): boolean {\n    return this.strategy.isSupported();\n  }\n\n  connect(minPriority: number, callback: Function): StrategyRunner {\n    var runner = this.strategy.connect(minPriority, function(error, handshake) {\n      if (handshake) {\n        runner.abort();\n      }\n      callback(error, handshake);\n    });\n    return runner;\n  }\n}\n","import * as Collections from 'core/utils/collections';\nimport TransportManager from 'core/transports/transport_manager';\nimport Strategy from 'core/strategies/strategy';\nimport SequentialStrategy from 'core/strategies/sequential_strategy';\nimport BestConnectedEverStrategy from 'core/strategies/best_connected_ever_strategy';\nimport CachedStrategy, {\n  TransportStrategyDictionary\n} from 'core/strategies/cached_strategy';\nimport DelayedStrategy from 'core/strategies/delayed_strategy';\nimport IfStrategy from 'core/strategies/if_strategy';\nimport FirstConnectedStrategy from 'core/strategies/first_connected_strategy';\nimport { Config } from 'core/config';\nimport StrategyOptions from 'core/strategies/strategy_options';\n\nfunction testSupportsStrategy(strategy: Strategy) {\n  return function() {\n    return strategy.isSupported();\n  };\n}\n\nvar getDefaultStrategy = function(\n  config: Config,\n  baseOptions: StrategyOptions,\n  defineTransport: Function\n): Strategy {\n  var definedTransports = <TransportStrategyDictionary>{};\n\n  function defineTransportStrategy(\n    name: string,\n    type: string,\n    priority: number,\n    options: StrategyOptions,\n    manager?: TransportManager\n  ) {\n    var transport = defineTransport(\n      config,\n      name,\n      type,\n      priority,\n      options,\n      manager\n    );\n\n    definedTransports[name] = transport;\n\n    return transport;\n  }\n\n  var ws_options: StrategyOptions = Object.assign({}, baseOptions, {\n    hostNonTLS: config.wsHost + ':' + config.wsPort,\n    hostTLS: config.wsHost + ':' + config.wssPort,\n    httpPath: config.wsPath\n  });\n  var wss_options: StrategyOptions = Collections.extend({}, ws_options, {\n    useTLS: true\n  });\n  var http_options: StrategyOptions = Object.assign({}, baseOptions, {\n    hostNonTLS: config.httpHost + ':' + config.httpPort,\n    hostTLS: config.httpHost + ':' + config.httpsPort,\n    httpPath: config.httpPath\n  });\n  var timeouts = {\n    loop: true,\n    timeout: 15000,\n    timeoutLimit: 60000\n  };\n\n  var ws_manager = new TransportManager({\n    lives: 2,\n    minPingDelay: 10000,\n    maxPingDelay: config.activityTimeout\n  });\n  var streaming_manager = new TransportManager({\n    lives: 2,\n    minPingDelay: 10000,\n    maxPingDelay: config.activityTimeout\n  });\n\n  var ws_transport = defineTransportStrategy(\n    'ws',\n    'ws',\n    3,\n    ws_options,\n    ws_manager\n  );\n  var wss_transport = defineTransportStrategy(\n    'wss',\n    'ws',\n    3,\n    wss_options,\n    ws_manager\n  );\n  var xhr_streaming_transport = defineTransportStrategy(\n    'xhr_streaming',\n    'xhr_streaming',\n    1,\n    http_options,\n    streaming_manager\n  );\n  var xhr_polling_transport = defineTransportStrategy(\n    'xhr_polling',\n    'xhr_polling',\n    1,\n    http_options\n  );\n\n  var ws_loop = new SequentialStrategy([ws_transport], timeouts);\n  var wss_loop = new SequentialStrategy([wss_transport], timeouts);\n  var streaming_loop = new SequentialStrategy(\n    [xhr_streaming_transport],\n    timeouts\n  );\n  var polling_loop = new SequentialStrategy([xhr_polling_transport], timeouts);\n\n  var http_loop = new SequentialStrategy(\n    [\n      new IfStrategy(\n        testSupportsStrategy(streaming_loop),\n        new BestConnectedEverStrategy([\n          streaming_loop,\n          new DelayedStrategy(polling_loop, { delay: 4000 })\n        ]),\n        polling_loop\n      )\n    ],\n    timeouts\n  );\n\n  var wsStrategy;\n  if (baseOptions.useTLS) {\n    wsStrategy = new BestConnectedEverStrategy([\n      ws_loop,\n      new DelayedStrategy(http_loop, { delay: 2000 })\n    ]);\n  } else {\n    wsStrategy = new BestConnectedEverStrategy([\n      ws_loop,\n      new DelayedStrategy(wss_loop, { delay: 2000 }),\n      new DelayedStrategy(http_loop, { delay: 5000 })\n    ]);\n  }\n\n  return new CachedStrategy(\n    new FirstConnectedStrategy(\n      new IfStrategy(testSupportsStrategy(ws_transport), wsStrategy, http_loop)\n    ),\n    definedTransports,\n    {\n      ttl: 1800000,\n      timeline: baseOptions.timeline,\n      useTLS: baseOptions.useTLS\n    }\n  );\n};\n\nexport default getDefaultStrategy;\n","enum State {\n  CONNECTING = 0,\n  OPEN = 1,\n  CLOSED = 3\n}\n\nexport default State;\n","import Runtime from 'runtime';\nimport RequestHooks from './request_hooks';\nimport Ajax from './ajax';\nimport { default as EventsDispatcher } from '../events/dispatcher';\n\nconst MAX_BUFFER_LENGTH = 256 * 1024;\n\nexport default class HTTPRequest extends EventsDispatcher {\n  hooks: RequestHooks;\n  method: string;\n  url: string;\n  position: number;\n  xhr: Ajax;\n  unloader: Function;\n\n  constructor(hooks: RequestHooks, method: string, url: string) {\n    super();\n    this.hooks = hooks;\n    this.method = method;\n    this.url = url;\n  }\n\n  start(payload?: any) {\n    this.position = 0;\n    this.xhr = this.hooks.getRequest(this);\n\n    this.unloader = () => {\n      this.close();\n    };\n    Runtime.addUnloadListener(this.unloader);\n\n    this.xhr.open(this.method, this.url, true);\n\n    if (this.xhr.setRequestHeader) {\n      this.xhr.setRequestHeader('Content-Type', 'application/json'); // ReactNative doesn't set this header by default.\n    }\n    this.xhr.send(payload);\n  }\n\n  close() {\n    if (this.unloader) {\n      Runtime.removeUnloadListener(this.unloader);\n      this.unloader = null;\n    }\n    if (this.xhr) {\n      this.hooks.abortRequest(this.xhr);\n      this.xhr = null;\n    }\n  }\n\n  onChunk(status: number, data: any) {\n    while (true) {\n      var chunk = this.advanceBuffer(data);\n      if (chunk) {\n        this.emit('chunk', { status: status, data: chunk });\n      } else {\n        break;\n      }\n    }\n    if (this.isBufferTooLong(data)) {\n      this.emit('buffer_too_long');\n    }\n  }\n\n  private advanceBuffer(buffer: any[]): any {\n    var unreadData = buffer.slice(this.position);\n    var endOfLinePosition = unreadData.indexOf('\\n');\n\n    if (endOfLinePosition !== -1) {\n      this.position += endOfLinePosition + 1;\n      return unreadData.slice(0, endOfLinePosition);\n    } else {\n      // chunk is not finished yet, don't move the buffer pointer\n      return null;\n    }\n  }\n\n  private isBufferTooLong(buffer: any): boolean {\n    return this.position === buffer.length && buffer.length > MAX_BUFFER_LENGTH;\n  }\n}\n","import URLLocation from './url_location';\nimport State from './state';\nimport Socket from '../socket';\nimport SocketHooks from './socket_hooks';\nimport Util from '../util';\nimport Ajax from './ajax';\nimport HTTPRequest from './http_request';\nimport Runtime from 'runtime';\n\nvar autoIncrement = 1;\n\nclass HTTPSocket implements Socket {\n  hooks: SocketHooks;\n  session: string;\n  location: URLLocation;\n  readyState: State;\n  stream: HTTPRequest;\n\n  onopen: () => void;\n  onerror: (error: any) => void;\n  onclose: (closeEvent: any) => void;\n  onmessage: (message: any) => void;\n  onactivity: () => void;\n\n  constructor(hooks: SocketHooks, url: string) {\n    this.hooks = hooks;\n    this.session = randomNumber(1000) + '/' + randomString(8);\n    this.location = getLocation(url);\n    this.readyState = State.CONNECTING;\n    this.openStream();\n  }\n\n  send(payload: any) {\n    return this.sendRaw(JSON.stringify([payload]));\n  }\n\n  ping() {\n    this.hooks.sendHeartbeat(this);\n  }\n\n  close(code: any, reason: any) {\n    this.onClose(code, reason, true);\n  }\n\n  /** For internal use only */\n  sendRaw(payload: any): boolean {\n    if (this.readyState === State.OPEN) {\n      try {\n        Runtime.createSocketRequest(\n          'POST',\n          getUniqueURL(getSendURL(this.location, this.session))\n        ).start(payload);\n        return true;\n      } catch (e) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  /** For internal use only */\n  reconnect() {\n    this.closeStream();\n    this.openStream();\n  }\n\n  /** For internal use only */\n  onClose(code, reason, wasClean) {\n    this.closeStream();\n    this.readyState = State.CLOSED;\n    if (this.onclose) {\n      this.onclose({\n        code: code,\n        reason: reason,\n        wasClean: wasClean\n      });\n    }\n  }\n\n  private onChunk(chunk) {\n    if (chunk.status !== 200) {\n      return;\n    }\n    if (this.readyState === State.OPEN) {\n      this.onActivity();\n    }\n\n    var payload;\n    var type = chunk.data.slice(0, 1);\n    switch (type) {\n      case 'o':\n        payload = JSON.parse(chunk.data.slice(1) || '{}');\n        this.onOpen(payload);\n        break;\n      case 'a':\n        payload = JSON.parse(chunk.data.slice(1) || '[]');\n        for (var i = 0; i < payload.length; i++) {\n          this.onEvent(payload[i]);\n        }\n        break;\n      case 'm':\n        payload = JSON.parse(chunk.data.slice(1) || 'null');\n        this.onEvent(payload);\n        break;\n      case 'h':\n        this.hooks.onHeartbeat(this);\n        break;\n      case 'c':\n        payload = JSON.parse(chunk.data.slice(1) || '[]');\n        this.onClose(payload[0], payload[1], true);\n        break;\n    }\n  }\n\n  private onOpen(options) {\n    if (this.readyState === State.CONNECTING) {\n      if (options && options.hostname) {\n        this.location.base = replaceHost(this.location.base, options.hostname);\n      }\n      this.readyState = State.OPEN;\n\n      if (this.onopen) {\n        this.onopen();\n      }\n    } else {\n      this.onClose(1006, 'Server lost session', true);\n    }\n  }\n\n  private onEvent(event) {\n    if (this.readyState === State.OPEN && this.onmessage) {\n      this.onmessage({ data: event });\n    }\n  }\n\n  private onActivity() {\n    if (this.onactivity) {\n      this.onactivity();\n    }\n  }\n\n  private onError(error) {\n    if (this.onerror) {\n      this.onerror(error);\n    }\n  }\n\n  private openStream() {\n    this.stream = Runtime.createSocketRequest(\n      'POST',\n      getUniqueURL(this.hooks.getReceiveURL(this.location, this.session))\n    );\n\n    this.stream.bind('chunk', chunk => {\n      this.onChunk(chunk);\n    });\n    this.stream.bind('finished', status => {\n      this.hooks.onFinished(this, status);\n    });\n    this.stream.bind('buffer_too_long', () => {\n      this.reconnect();\n    });\n\n    try {\n      this.stream.start();\n    } catch (error) {\n      Util.defer(() => {\n        this.onError(error);\n        this.onClose(1006, 'Could not start streaming', false);\n      });\n    }\n  }\n\n  private closeStream() {\n    if (this.stream) {\n      this.stream.unbind_all();\n      this.stream.close();\n      this.stream = null;\n    }\n  }\n}\n\nfunction getLocation(url): URLLocation {\n  var parts = /([^\\?]*)\\/*(\\??.*)/.exec(url);\n  return {\n    base: parts[1],\n    queryString: parts[2]\n  };\n}\n\nfunction getSendURL(url: URLLocation, session: string): string {\n  return url.base + '/' + session + '/xhr_send';\n}\n\nfunction getUniqueURL(url: string): string {\n  var separator = url.indexOf('?') === -1 ? '?' : '&';\n  return url + separator + 't=' + +new Date() + '&n=' + autoIncrement++;\n}\n\nfunction replaceHost(url: string, hostname: string): string {\n  var urlParts = /(https?:\\/\\/)([^\\/:]+)((\\/|:)?.*)/.exec(url);\n  return urlParts[1] + hostname + urlParts[3];\n}\n\nfunction randomNumber(max: number): number {\n  return Math.floor(Math.random() * max);\n}\n\nfunction randomString(length: number): string {\n  var result = [];\n  for (var i = 0; i < length; i++) {\n    result.push(randomNumber(32).toString(32));\n  }\n  return result.join('');\n}\n\nexport default HTTPSocket;\n","enum TimelineLevel {\n  ERROR = 3,\n  INFO = 6,\n  DEBUG = 7\n}\n\nexport default TimelineLevel;\n","import SocketHooks from './socket_hooks';\nimport HTTPSocket from './http_socket';\n\nvar hooks: SocketHooks = {\n  getReceiveURL: function(url, session) {\n    return url.base + '/' + session + '/xhr_streaming' + url.queryString;\n  },\n  onHeartbeat: function(socket) {\n    socket.sendRaw('[]');\n  },\n  sendHeartbeat: function(socket) {\n    socket.sendRaw('[]');\n  },\n  onFinished: function(socket, status) {\n    socket.onClose(1006, 'Connection interrupted (' + status + ')', false);\n  }\n};\n\nexport default hooks;\n","import SocketHooks from './socket_hooks';\nimport URLLocation from './url_location';\nimport HTTPSocket from './http_socket';\n\nvar hooks: SocketHooks = {\n  getReceiveURL: function(url: URLLocation, session: string): string {\n    return url.base + '/' + session + '/xhr' + url.queryString;\n  },\n  onHeartbeat: function() {\n    // next HTTP request will reset server's activity timer\n  },\n  sendHeartbeat: function(socket) {\n    socket.sendRaw('[]');\n  },\n  onFinished: function(socket, status) {\n    if (status === 200) {\n      socket.reconnect();\n    } else {\n      socket.onClose(1006, 'Connection interrupted (' + status + ')', false);\n    }\n  }\n};\n\nexport default hooks;\n","import HTTPRequest from 'core/http/http_request';\nimport RequestHooks from 'core/http/request_hooks';\nimport Ajax from 'core/http/ajax';\nimport Runtime from 'runtime';\n\nvar hooks: RequestHooks = {\n  getRequest: function(socket: HTTPRequest): Ajax {\n    var Constructor = Runtime.getXHRAPI();\n    var xhr = new Constructor();\n    xhr.onreadystatechange = xhr.onprogress = function() {\n      switch (xhr.readyState) {\n        case 3:\n          if (xhr.responseText && xhr.responseText.length > 0) {\n            socket.onChunk(xhr.status, xhr.responseText);\n          }\n          break;\n        case 4:\n          // this happens only on errors, never after calling close\n          if (xhr.responseText && xhr.responseText.length > 0) {\n            socket.onChunk(xhr.status, xhr.responseText);\n          }\n          socket.emit('finished', xhr.status);\n          socket.close();\n          break;\n      }\n    };\n    return xhr;\n  },\n  abortRequest: function(xhr: Ajax) {\n    xhr.onreadystatechange = null;\n    xhr.abort();\n  }\n};\n\nexport default hooks;\n","import * as Collections from 'core/utils/collections';\nimport Transports from 'isomorphic/transports/transports';\nimport TimelineSender from 'core/timeline/timeline_sender';\nimport Ajax from 'core/http/ajax';\nimport getDefaultStrategy from './default_strategy';\nimport TransportsTable from 'core/transports/transports_table';\nimport transportConnectionInitializer from './transports/transport_connection_initializer';\nimport HTTPFactory from './http/http';\n\nvar Isomorphic: any = {\n  getDefaultStrategy,\n  Transports: <TransportsTable>Transports,\n  transportConnectionInitializer,\n  HTTPFactory,\n\n  setup(PusherClass): void {\n    PusherClass.ready();\n  },\n\n  getLocalStorage(): any {\n    return undefined;\n  },\n\n  getClientFeatures(): any[] {\n    return Collections.keys(\n      Collections.filterObject({ ws: Transports.ws }, function(t) {\n        return t.isSupported({});\n      })\n    );\n  },\n\n  getProtocol(): string {\n    return 'http:';\n  },\n\n  isXHRSupported(): boolean {\n    return true;\n  },\n\n  createSocketRequest(method: string, url: string) {\n    if (this.isXHRSupported()) {\n      return this.HTTPFactory.createXHR(method, url);\n    } else {\n      throw 'Cross-origin HTTP requests are not supported';\n    }\n  },\n\n  createXHR(): Ajax {\n    var Constructor = this.getXHRAPI();\n    return new Constructor();\n  },\n\n  createWebSocket(url: string): any {\n    var Constructor = this.getWebSocketAPI();\n    return new Constructor(url);\n  },\n\n  addUnloadListener(listener: any) {},\n  removeUnloadListener(listener: any) {}\n};\n\nexport default Isomorphic;\n","/** Initializes the transport.\n *\n * Fetches resources if needed and then transitions to initialized.\n */\nexport default function() {\n  var self = this;\n\n  self.timeline.info(\n    self.buildTimelineMessage({\n      transport: self.name + (self.options.useTLS ? 's' : '')\n    })\n  );\n\n  if (self.hooks.isInitialized()) {\n    self.changeState('initialized');\n  } else {\n    self.onClose();\n  }\n}\n","import HTTPRequest from 'core/http/http_request';\nimport HTTPSocket from 'core/http/http_socket';\nimport SocketHooks from 'core/http/socket_hooks';\nimport RequestHooks from 'core/http/request_hooks';\nimport streamingHooks from 'core/http/http_streaming_socket';\nimport pollingHooks from 'core/http/http_polling_socket';\nimport xhrHooks from './http_xhr_request';\nimport HTTPFactory from 'core/http/http_factory';\n\nvar HTTP: HTTPFactory = {\n  createStreamingSocket(url: string): HTTPSocket {\n    return this.createSocket(streamingHooks, url);\n  },\n\n  createPollingSocket(url: string): HTTPSocket {\n    return this.createSocket(pollingHooks, url);\n  },\n\n  createSocket(hooks: SocketHooks, url: string): HTTPSocket {\n    return new HTTPSocket(hooks, url);\n  },\n\n  createXHR(method: string, url: string): HTTPRequest {\n    return this.createRequest(xhrHooks, method, url);\n  },\n\n  createRequest(hooks: RequestHooks, method: string, url: string): HTTPRequest {\n    return new HTTPRequest(hooks, method, url);\n  }\n};\n\nexport default HTTP;\n","import { default as EventsDispatcher } from 'core/events/dispatcher';\nimport Reachability from 'core/reachability';\n\nexport class NetInfo extends EventsDispatcher implements Reachability {\n  isOnline(): boolean {\n    return true;\n  }\n}\n\nexport var Network = new NetInfo();\n","import AbstractRuntime from 'runtimes/interface';\nimport { AuthTransport } from 'core/auth/auth_transports';\nimport { AuthTransportCallback, InternalAuthOptions } from 'core/auth/options';\nimport { HTTPAuthError } from 'core/errors';\n\nvar fetchAuth: AuthTransport = function(\n  context: AbstractRuntime,\n  query: string,\n  authOptions: InternalAuthOptions,\n  callback: AuthTransportCallback\n) {\n  var headers = new Headers();\n  headers.set('Content-Type', 'application/x-www-form-urlencoded');\n\n  for (var headerName in authOptions.headers) {\n    headers.set(headerName, authOptions.headers[headerName]);\n  }\n\n  var body = query;\n  var request = new Request(authOptions.endpoint, {\n    headers,\n    body,\n    credentials: 'same-origin',\n    method: 'POST'\n  });\n\n  return fetch(request)\n    .then(response => {\n      let { status } = response;\n      if (status === 200) {\n        // manually parse the json so we can provide a more helpful error in\n        // failure case\n        return response.text();\n      }\n      throw new HTTPAuthError(\n        200,\n        `Could not get auth info from your auth endpoint, status: ${status}`\n      );\n    })\n    .then(data => {\n      let parsedData;\n      try {\n        parsedData = JSON.parse(data);\n      } catch (e) {\n        throw new HTTPAuthError(\n          200,\n          'JSON returned from auth endpoint was invalid, yet status code was 200. Data was: ' +\n            data\n        );\n      }\n      callback(null, parsedData);\n    })\n    .catch(err => {\n      callback(err, null);\n    });\n};\n\nexport default fetchAuth;\n","import Isomorphic from 'isomorphic/runtime';\nimport Runtime from '../interface';\nimport { Network } from './net_info';\nimport fetchAuth from './auth/fetch_auth';\nimport { AuthTransports } from 'core/auth/auth_transports';\nimport fetchTimeline from './timeline/fetch_timeline';\n\n// Very verbose but until unavoidable until\n// TypeScript 2.1, when spread attributes will be\n// supported\nconst {\n  getDefaultStrategy,\n  Transports,\n  setup,\n  getProtocol,\n  isXHRSupported,\n  getLocalStorage,\n  createXHR,\n  createWebSocket,\n  addUnloadListener,\n  removeUnloadListener,\n  transportConnectionInitializer,\n  createSocketRequest,\n  HTTPFactory\n} = Isomorphic;\n\nconst Worker: Runtime = {\n  getDefaultStrategy,\n  Transports,\n  setup,\n  getProtocol,\n  isXHRSupported,\n  getLocalStorage,\n  createXHR,\n  createWebSocket,\n  addUnloadListener,\n  removeUnloadListener,\n  transportConnectionInitializer,\n  createSocketRequest,\n  HTTPFactory,\n\n  TimelineTransport: fetchTimeline,\n\n  getAuthorizers(): AuthTransports {\n    return { ajax: fetchAuth };\n  },\n\n  getWebSocketAPI() {\n    return WebSocket;\n  },\n\n  getXHRAPI() {\n    return XMLHttpRequest;\n  },\n\n  getNetwork() {\n    return Network;\n  }\n};\n\nexport default Worker;\n","import Logger from 'core/logger';\nimport TimelineSender from 'core/timeline/timeline_sender';\nimport * as Collections from 'core/utils/collections';\nimport Util from 'core/util';\nimport Runtime from 'runtime';\nimport TimelineTransport from 'core/timeline/timeline_transport';\n\nvar getAgent = function(sender: TimelineSender, useTLS: boolean) {\n  return function(data: any, callback: Function) {\n    var scheme = 'http' + (useTLS ? 's' : '') + '://';\n    var url =\n      scheme + (sender.host || sender.options.host) + sender.options.path;\n    var query = Collections.buildQueryString(data);\n    url += '/' + 2 + '?' + query;\n\n    fetch(url)\n      .then(response => {\n        if (response.status !== 200) {\n          throw `received ${response.status} from stats.pusher.com`;\n        }\n        return response.json();\n      })\n      .then(({ host }) => {\n        if (host) {\n          sender.host = host;\n        }\n      })\n      .catch(err => {\n        Logger.debug('TimelineSender Error: ', err);\n      });\n  };\n};\n\nvar fetchTimeline = {\n  name: 'xhr',\n  getAgent\n};\n\nexport default fetchTimeline;\n","import * as Collections from '../utils/collections';\nimport Util from '../util';\nimport { default as Level } from './level';\n\nexport interface TimelineOptions {\n  level?: Level;\n  limit?: number;\n  version?: string;\n  cluster?: string;\n  features?: string[];\n  params?: any;\n}\n\nexport default class Timeline {\n  key: string;\n  session: number;\n  events: any[];\n  options: TimelineOptions;\n  sent: number;\n  uniqueID: number;\n\n  constructor(key: string, session: number, options: TimelineOptions) {\n    this.key = key;\n    this.session = session;\n    this.events = [];\n    this.options = options || {};\n    this.sent = 0;\n    this.uniqueID = 0;\n  }\n\n  log(level, event) {\n    if (level <= this.options.level) {\n      this.events.push(\n        Collections.extend({}, event, { timestamp: Util.now() })\n      );\n      if (this.options.limit && this.events.length > this.options.limit) {\n        this.events.shift();\n      }\n    }\n  }\n\n  error(event) {\n    this.log(Level.ERROR, event);\n  }\n\n  info(event) {\n    this.log(Level.INFO, event);\n  }\n\n  debug(event) {\n    this.log(Level.DEBUG, event);\n  }\n\n  isEmpty() {\n    return this.events.length === 0;\n  }\n\n  send(sendfn, callback) {\n    var data = Collections.extend(\n      {\n        session: this.session,\n        bundle: this.sent + 1,\n        key: this.key,\n        lib: 'js',\n        version: this.options.version,\n        cluster: this.options.cluster,\n        features: this.options.features,\n        timeline: this.events\n      },\n      this.options.params\n    );\n\n    this.events = [];\n    sendfn(data, (error, result) => {\n      if (!error) {\n        this.sent++;\n      }\n      if (callback) {\n        callback(error, result);\n      }\n    });\n\n    return true;\n  }\n\n  generateUniqueID(): number {\n    this.uniqueID++;\n    return this.uniqueID;\n  }\n}\n","import Factory from '../utils/factory';\nimport Util from '../util';\nimport * as Errors from '../errors';\nimport * as Collections from '../utils/collections';\nimport Strategy from './strategy';\nimport Transport from '../transports/transport';\nimport StrategyOptions from './strategy_options';\nimport Handshake from '../connection/handshake';\n\n/** Provides a strategy interface for transports.\n *\n * @param {String} name\n * @param {Number} priority\n * @param {Class} transport\n * @param {Object} options\n */\nexport default class TransportStrategy implements Strategy {\n  name: string;\n  priority: number;\n  transport: Transport;\n  options: StrategyOptions;\n\n  constructor(\n    name: string,\n    priority: number,\n    transport: Transport,\n    options: StrategyOptions\n  ) {\n    this.name = name;\n    this.priority = priority;\n    this.transport = transport;\n    this.options = options || {};\n  }\n\n  /** Returns whether the transport is supported in the browser.\n   *\n   * @returns {Boolean}\n   */\n  isSupported(): boolean {\n    return this.transport.isSupported({\n      useTLS: this.options.useTLS\n    });\n  }\n\n  /** Launches a connection attempt and returns a strategy runner.\n   *\n   * @param  {Function} callback\n   * @return {Object} strategy runner\n   */\n  connect(minPriority: number, callback: Function) {\n    if (!this.isSupported()) {\n      return failAttempt(new Errors.UnsupportedStrategy(), callback);\n    } else if (this.priority < minPriority) {\n      return failAttempt(new Errors.TransportPriorityTooLow(), callback);\n    }\n\n    var connected = false;\n    var transport = this.transport.createConnection(\n      this.name,\n      this.priority,\n      this.options.key,\n      this.options\n    );\n    var handshake = null;\n\n    var onInitialized = function() {\n      transport.unbind('initialized', onInitialized);\n      transport.connect();\n    };\n    var onOpen = function() {\n      handshake = Factory.createHandshake(transport, function(result) {\n        connected = true;\n        unbindListeners();\n        callback(null, result);\n      });\n    };\n    var onError = function(error) {\n      unbindListeners();\n      callback(error);\n    };\n    var onClosed = function() {\n      unbindListeners();\n      var serializedTransport;\n\n      // The reason for this try/catch block is that on React Native\n      // the WebSocket object is circular. Therefore transport.socket will\n      // throw errors upon stringification. Collections.safeJSONStringify\n      // discards circular references when serializing.\n      serializedTransport = Collections.safeJSONStringify(transport);\n      callback(new Errors.TransportClosed(serializedTransport));\n    };\n\n    var unbindListeners = function() {\n      transport.unbind('initialized', onInitialized);\n      transport.unbind('open', onOpen);\n      transport.unbind('error', onError);\n      transport.unbind('closed', onClosed);\n    };\n\n    transport.bind('initialized', onInitialized);\n    transport.bind('open', onOpen);\n    transport.bind('error', onError);\n    transport.bind('closed', onClosed);\n\n    // connect will be called automatically after initialization\n    transport.initialize();\n\n    return {\n      abort: () => {\n        if (connected) {\n          return;\n        }\n        unbindListeners();\n        if (handshake) {\n          handshake.close();\n        } else {\n          transport.close();\n        }\n      },\n      forceMinPriority: p => {\n        if (connected) {\n          return;\n        }\n        if (this.priority < p) {\n          if (handshake) {\n            handshake.close();\n          } else {\n            transport.close();\n          }\n        }\n      }\n    };\n  }\n}\n\nfunction failAttempt(error: Error, callback: Function) {\n  Util.defer(function() {\n    callback(error);\n  });\n  return {\n    abort: function() {},\n    forceMinPriority: function() {}\n  };\n}\n","import * as Collections from '../utils/collections';\nimport Util from '../util';\nimport TransportManager from '../transports/transport_manager';\nimport * as Errors from '../errors';\nimport Strategy from './strategy';\nimport TransportStrategy from './transport_strategy';\nimport StrategyOptions from '../strategies/strategy_options';\nimport { Config } from '../config';\nimport Runtime from 'runtime';\n\nconst { Transports } = Runtime;\n\nexport var defineTransport = function(\n  config: Config,\n  name: string,\n  type: string,\n  priority: number,\n  options: StrategyOptions,\n  manager?: TransportManager\n): Strategy {\n  var transportClass = Transports[type];\n  if (!transportClass) {\n    throw new Errors.UnsupportedTransport(type);\n  }\n\n  var enabled =\n    (!config.enabledTransports ||\n      Collections.arrayIndexOf(config.enabledTransports, name) !== -1) &&\n    (!config.disabledTransports ||\n      Collections.arrayIndexOf(config.disabledTransports, name) === -1);\n\n  var transport;\n  if (enabled) {\n    options = Object.assign(\n      { ignoreNullOrigin: config.ignoreNullOrigin },\n      options\n    );\n\n    transport = new TransportStrategy(\n      name,\n      priority,\n      manager ? manager.getAssistant(transportClass) : transportClass,\n      options\n    );\n  } else {\n    transport = UnsupportedStrategy;\n  }\n\n  return transport;\n};\n\nvar UnsupportedStrategy: Strategy = {\n  isSupported: function() {\n    return false;\n  },\n  connect: function(_, callback) {\n    var deferred = Util.defer(function() {\n      callback(new Errors.UnsupportedStrategy());\n    });\n    return {\n      abort: function() {\n        deferred.ensureAborted();\n      },\n      forceMinPriority: function() {}\n    };\n  }\n};\n","import {\n  UserAuthenticationCallback,\n  InternalAuthOptions,\n  UserAuthenticationHandler,\n  UserAuthenticationRequestParams\n} from './options';\n\nimport Runtime from 'runtime';\n\nconst composeChannelQuery = (\n  params: UserAuthenticationRequestParams,\n  authOptions: InternalAuthOptions\n) => {\n  var query = 'socket_id=' + encodeURIComponent(params.socketId);\n\n  for (var i in authOptions.params) {\n    query +=\n      '&' +\n      encodeURIComponent(i) +\n      '=' +\n      encodeURIComponent(authOptions.params[i]);\n  }\n\n  return query;\n};\n\nconst UserAuthenticator = (\n  authOptions: InternalAuthOptions\n): UserAuthenticationHandler => {\n  if (typeof Runtime.getAuthorizers()[authOptions.transport] === 'undefined') {\n    throw `'${authOptions.transport}' is not a recognized auth transport`;\n  }\n\n  return (params: UserAuthenticationRequestParams, callback: UserAuthenticationCallback) => {\n    const query = composeChannelQuery(params, authOptions);\n\n    Runtime.getAuthorizers()[authOptions.transport](\n      Runtime,\n      query,\n      authOptions,\n      callback\n    );\n  };\n};\n\nexport default UserAuthenticator;\n","import {\n  InternalAuthOptions,\n  ChannelAuthorizationHandler,\n  ChannelAuthorizationRequestParams,\n  ChannelAuthorizationCallback\n} from './options';\n\nimport Runtime from 'runtime';\n\nconst composeChannelQuery = (\n  params: ChannelAuthorizationRequestParams,\n  authOptions: InternalAuthOptions\n) => {\n  var query = 'socket_id=' + encodeURIComponent(params.socketId);\n\n  query += '&channel_name=' + encodeURIComponent(params.channelName);\n\n  for (var i in authOptions.params) {\n    query +=\n      '&' +\n      encodeURIComponent(i) +\n      '=' +\n      encodeURIComponent(authOptions.params[i]);\n  }\n\n  return query;\n};\n\nconst ChannelAuthorizer = (\n  authOptions: InternalAuthOptions\n): ChannelAuthorizationHandler => {\n  if (typeof Runtime.getAuthorizers()[authOptions.transport] === 'undefined') {\n    throw `'${authOptions.transport}' is not a recognized auth transport`;\n  }\n\n  return (params: ChannelAuthorizationRequestParams, callback: ChannelAuthorizationCallback) => {\n    const query = composeChannelQuery(params, authOptions);\n\n    Runtime.getAuthorizers()[authOptions.transport](\n      Runtime,\n      query,\n      authOptions,\n      callback\n    );\n  };\n};\n\nexport default ChannelAuthorizer;\n","import { Options } from './options';\nimport Defaults from './defaults';\nimport {\n  ChannelAuthorizationHandler,\n  UserAuthenticationHandler,\n  AuthOptions\n} from './auth/options';\nimport UserAuthenticator from './auth/user_authenticator';\nimport ChannelAuthorizer from './auth/channel_authorizer';\nimport { ChannelAuthorizerProxy } from './auth/deprecated_channel_authorizer';\nimport Runtime from 'runtime';\nimport * as nacl from 'tweetnacl';\nimport Logger from './logger';\n\nexport type AuthTransport = 'ajax' | 'jsonp';\nexport type Transport =\n  | 'ws'\n  | 'wss'\n  | 'xhr_streaming'\n  | 'xhr_polling'\n  | 'sockjs';\n\nexport interface Config {\n  // these are all 'required' config parameters, it's not necessary for the user\n  // to set them, but they have configured defaults.\n  activityTimeout: number;\n  enableStats: boolean;\n  httpHost: string;\n  httpPath: string;\n  httpPort: number;\n  httpsPort: number;\n  pongTimeout: number;\n  statsHost: string;\n  unavailableTimeout: number;\n  useTLS: boolean;\n  wsHost: string;\n  wsPath: string;\n  wsPort: number;\n  wssPort: number;\n  userAuthenticator: UserAuthenticationHandler;\n  channelAuthorizer: ChannelAuthorizationHandler;\n\n  // these are all optional parameters or overrrides. The customer can set these\n  // but it's not strictly necessary\n  forceTLS?: boolean;\n  cluster?: string;\n  disabledTransports?: Transport[];\n  enabledTransports?: Transport[];\n  ignoreNullOrigin?: boolean;\n  nacl?: nacl;\n  timelineParams?: any;\n}\n\n// getConfig mainly sets the defaults for the options that are not provided\nexport function getConfig(opts: Options, pusher): Config {\n  let config: Config = {\n    activityTimeout: opts.activityTimeout || Defaults.activityTimeout,\n    cluster: opts.cluster || Defaults.cluster,\n    httpPath: opts.httpPath || Defaults.httpPath,\n    httpPort: opts.httpPort || Defaults.httpPort,\n    httpsPort: opts.httpsPort || Defaults.httpsPort,\n    pongTimeout: opts.pongTimeout || Defaults.pongTimeout,\n    statsHost: opts.statsHost || Defaults.stats_host,\n    unavailableTimeout: opts.unavailableTimeout || Defaults.unavailableTimeout,\n    wsPath: opts.wsPath || Defaults.wsPath,\n    wsPort: opts.wsPort || Defaults.wsPort,\n    wssPort: opts.wssPort || Defaults.wssPort,\n\n    enableStats: getEnableStatsConfig(opts),\n    httpHost: getHttpHost(opts),\n    useTLS: shouldUseTLS(opts),\n    wsHost: getWebsocketHost(opts),\n\n    userAuthenticator: buildUserAuthenticator(opts),\n    channelAuthorizer: buildChannelAuthorizer(opts, pusher)\n  };\n\n  if ('disabledTransports' in opts)\n    config.disabledTransports = opts.disabledTransports;\n  if ('enabledTransports' in opts)\n    config.enabledTransports = opts.enabledTransports;\n  if ('ignoreNullOrigin' in opts)\n    config.ignoreNullOrigin = opts.ignoreNullOrigin;\n  if ('timelineParams' in opts) config.timelineParams = opts.timelineParams;\n  if ('nacl' in opts) {\n    config.nacl = opts.nacl;\n  }\n\n  return config;\n}\n\nfunction getHttpHost(opts: Options): string {\n  if (opts.httpHost) {\n    return opts.httpHost;\n  }\n  if (opts.cluster) {\n    return `sockjs-${opts.cluster}.pusher.com`;\n  }\n  return Defaults.httpHost;\n}\n\nfunction getWebsocketHost(opts: Options): string {\n  if (opts.wsHost) {\n    return opts.wsHost;\n  }\n  if (opts.cluster) {\n    return getWebsocketHostFromCluster(opts.cluster);\n  }\n  return getWebsocketHostFromCluster(Defaults.cluster);\n}\n\nfunction getWebsocketHostFromCluster(cluster: string): string {\n  return `ws-${cluster}.pusher.com`;\n}\n\nfunction shouldUseTLS(opts: Options): boolean {\n  if (Runtime.getProtocol() === 'https:') {\n    return true;\n  } else if (opts.forceTLS === false) {\n    return false;\n  }\n  return true;\n}\n\n// if enableStats is set take the value\n// if disableStats is set take the inverse\n// otherwise default to false\nfunction getEnableStatsConfig(opts: Options): boolean {\n  if ('enableStats' in opts) {\n    return opts.enableStats;\n  }\n  if ('disableStats' in opts) {\n    return !opts.disableStats;\n  }\n  return false;\n}\n\nfunction buildUserAuthenticator(opts: Options): UserAuthenticationHandler {\n  const userAuthentication = opts.userAuthentication || Defaults.userAuthentication;\n  if ('customHandler' in userAuthentication) {\n    return userAuthentication['customHandler'];\n  }\n\n  return UserAuthenticator(userAuthentication);\n}\n\nfunction buildChannelAuth(\n  opts: Options,\n  pusher\n): AuthOptions<ChannelAuthorizationHandler> {\n  var channelAuthorization: AuthOptions<ChannelAuthorizationHandler>;\n  if ('channelAuthorization' in opts) {\n    channelAuthorization = opts.channelAuthorization;\n  } else {\n    channelAuthorization = {\n      transport: opts.authTransport || Defaults.authTransport,\n      endpoint: opts.authEndpoint || Defaults.authEndpoint\n    };\n    if ('auth' in opts) {\n      if ('params' in opts.auth) channelAuthorization.params = opts.auth.params;\n      if ('headers' in opts.auth) channelAuthorization.headers = opts.auth.headers;\n    }\n    if ('authorizer' in opts)\n      channelAuthorization.customHandler = ChannelAuthorizerProxy(\n        pusher,\n        channelAuthorization,\n        opts.authorizer\n      );\n  }\n  return channelAuthorization;\n}\n\nfunction buildChannelAuthorizer(opts: Options, pusher): ChannelAuthorizationHandler {\n  const channelAuthorization = buildChannelAuth(opts, pusher);\n  if ('customHandler' in channelAuthorization) {\n    return channelAuthorization['customHandler'];\n  }\n\n  return ChannelAuthorizer(channelAuthorization);\n}\n","import Channel from '../channels/channel';\nimport {\n  ChannelAuthorizationCallback,\n  ChannelAuthorizationHandler,\n  ChannelAuthorizationRequestParams,\n  InternalAuthOptions\n} from './options';\n\nexport interface DeprecatedChannelAuthorizer {\n  authorize(socketId: string, callback: ChannelAuthorizationCallback): void;\n}\n\nexport interface ChannelAuthorizerGenerator {\n  (\n    channel: Channel,\n    options: DeprecatedAuthorizerOptions\n  ): DeprecatedChannelAuthorizer;\n}\n\nexport interface DeprecatedAuthOptions {\n  params?: any;\n  headers?: any;\n}\n\nexport interface DeprecatedAuthorizerOptions {\n  authTransport: 'ajax' | 'jsonp';\n  authEndpoint: string;\n  auth?: DeprecatedAuthOptions;\n}\n\nexport const ChannelAuthorizerProxy = (\n  pusher,\n  authOptions: InternalAuthOptions,\n  channelAuthorizerGenerator: ChannelAuthorizerGenerator\n): ChannelAuthorizationHandler => {\n  const deprecatedAuthorizerOptions: DeprecatedAuthorizerOptions = {\n    authTransport: authOptions.transport,\n    authEndpoint: authOptions.endpoint,\n    auth: {\n      params: authOptions.params,\n      headers: authOptions.headers\n    }\n  };\n  return (params: ChannelAuthorizationRequestParams, callback: ChannelAuthorizationCallback) => {\n    const channel = pusher.channel(params.channelName);\n    // This line creates a new channel authorizer every time.\n    // In the past, this was only done once per channel and reused.\n    // We can do that again if we want to keep this behavior intact.\n    const channelAuthorizer: DeprecatedChannelAuthorizer = channelAuthorizerGenerator(\n      channel,\n      deprecatedAuthorizerOptions\n    );\n    channelAuthorizer.authorize(params.socketId, callback);\n  };\n};\n","import AbstractRuntime from '../runtimes/interface';\nimport Runtime from 'runtime';\nimport Util from './util';\nimport * as Collections from './utils/collections';\nimport Channels from './channels/channels';\nimport Channel from './channels/channel';\nimport { default as EventsDispatcher } from './events/dispatcher';\nimport Timeline from './timeline/timeline';\nimport TimelineSender from './timeline/timeline_sender';\nimport TimelineLevel from './timeline/level';\nimport { defineTransport } from './strategies/strategy_builder';\nimport ConnectionManager from './connection/connection_manager';\nimport ConnectionManagerOptions from './connection/connection_manager_options';\nimport { PeriodicTimer } from './utils/timers';\nimport Defaults from './defaults';\nimport * as DefaultConfig from './config';\nimport Logger from './logger';\nimport Factory from './utils/factory';\nimport UrlStore from 'core/utils/url_store';\nimport { Options } from './options';\nimport { Config, getConfig } from './config';\nimport StrategyOptions from './strategies/strategy_options';\nimport { UserAuthenticationData, UserAuthenticationCallback } from './auth/options';\n\nexport default class Pusher {\n  /*  STATIC PROPERTIES */\n  static instances: Pusher[] = [];\n  static isReady: boolean = false;\n  static logToConsole: boolean = false;\n\n  // for jsonp\n  static Runtime: AbstractRuntime = Runtime;\n  static ScriptReceivers: any = (<any>Runtime).ScriptReceivers;\n  static DependenciesReceivers: any = (<any>Runtime).DependenciesReceivers;\n  static auth_callbacks: any = (<any>Runtime).auth_callbacks;\n\n  static ready() {\n    Pusher.isReady = true;\n    for (var i = 0, l = Pusher.instances.length; i < l; i++) {\n      Pusher.instances[i].connect();\n    }\n  }\n\n  static log: (message: any) => void;\n\n  private static getClientFeatures(): string[] {\n    return Collections.keys(\n      Collections.filterObject({ ws: Runtime.Transports.ws }, function(t) {\n        return t.isSupported({});\n      })\n    );\n  }\n\n  /* INSTANCE PROPERTIES */\n  key: string;\n  config: Config;\n  channels: Channels;\n  global_emitter: EventsDispatcher;\n  sessionID: number;\n  timeline: Timeline;\n  timelineSender: TimelineSender;\n  connection: ConnectionManager;\n  timelineSenderTimer: PeriodicTimer;\n  user?;\n  signin_requested: boolean = false;\n\n  constructor(app_key: string, options?: Options) {\n    checkAppKey(app_key);\n    options = options || {};\n    if (!options.cluster && !(options.wsHost || options.httpHost)) {\n      let suffix = UrlStore.buildLogSuffix('javascriptQuickStart');\n      Logger.warn(\n        `You should always specify a cluster when connecting. ${suffix}`\n      );\n    }\n    if ('disableStats' in options) {\n      Logger.warn(\n        'The disableStats option is deprecated in favor of enableStats'\n      );\n    }\n\n    this.key = app_key;\n    this.config = getConfig(options, this);\n\n    this.channels = Factory.createChannels();\n    this.global_emitter = new EventsDispatcher();\n    this.sessionID = Math.floor(Math.random() * 1000000000);\n\n    this.timeline = new Timeline(this.key, this.sessionID, {\n      cluster: this.config.cluster,\n      features: Pusher.getClientFeatures(),\n      params: this.config.timelineParams || {},\n      limit: 50,\n      level: TimelineLevel.INFO,\n      version: Defaults.VERSION\n    });\n    if (this.config.enableStats) {\n      this.timelineSender = Factory.createTimelineSender(this.timeline, {\n        host: this.config.statsHost,\n        path: '/timeline/v2/' + Runtime.TimelineTransport.name\n      });\n    }\n\n    var getStrategy = (options: StrategyOptions) => {\n      return Runtime.getDefaultStrategy(this.config, options, defineTransport);\n    };\n\n    this.connection = Factory.createConnectionManager(this.key, {\n      getStrategy: getStrategy,\n      timeline: this.timeline,\n      activityTimeout: this.config.activityTimeout,\n      pongTimeout: this.config.pongTimeout,\n      unavailableTimeout: this.config.unavailableTimeout,\n      useTLS: Boolean(this.config.useTLS)\n    });\n\n    this.connection.bind('connected', () => {\n      this.subscribeAll();\n      this._signin();\n      if (this.timelineSender) {\n        this.timelineSender.send(this.connection.isUsingTLS());\n      }\n    });\n\n    this.connection.bind('message', event => {\n      var eventName = event.event;\n      if (eventName === 'pusher:signin_success') {\n        try {\n          this.user = JSON.parse(event.data.user_data);\n        } catch (e) {\n          Logger.warn(\n            `Failed parsing user data after signin: ${event.data.user_data}`\n          );\n        }\n      }\n\n      var internal = eventName.indexOf('pusher_internal:') === 0;\n      if (event.channel) {\n        var channel = this.channel(event.channel);\n        if (channel) {\n          channel.handleEvent(event);\n        }\n      }\n      // Emit globally [deprecated]\n      if (!internal) {\n        this.global_emitter.emit(event.event, event.data);\n      }\n    });\n    this.connection.bind('connecting', () => {\n      this.channels.disconnect();\n    });\n    this.connection.bind('disconnected', () => {\n      this.channels.disconnect();\n    });\n    this.connection.bind('error', err => {\n      Logger.warn(err);\n    });\n\n    Pusher.instances.push(this);\n    this.timeline.info({ instances: Pusher.instances.length });\n\n    if (Pusher.isReady) {\n      this.connect();\n    }\n  }\n\n  channel(name: string): Channel {\n    return this.channels.find(name);\n  }\n\n  allChannels(): Channel[] {\n    return this.channels.all();\n  }\n\n  connect() {\n    this.connection.connect();\n\n    if (this.timelineSender) {\n      if (!this.timelineSenderTimer) {\n        var usingTLS = this.connection.isUsingTLS();\n        var timelineSender = this.timelineSender;\n        this.timelineSenderTimer = new PeriodicTimer(60000, function() {\n          timelineSender.send(usingTLS);\n        });\n      }\n    }\n  }\n\n  disconnect() {\n    this.connection.disconnect();\n\n    if (this.timelineSenderTimer) {\n      this.timelineSenderTimer.ensureAborted();\n      this.timelineSenderTimer = null;\n    }\n  }\n\n  bind(event_name: string, callback: Function, context?: any): Pusher {\n    this.global_emitter.bind(event_name, callback, context);\n    return this;\n  }\n\n  unbind(event_name?: string, callback?: Function, context?: any): Pusher {\n    this.global_emitter.unbind(event_name, callback, context);\n    return this;\n  }\n\n  bind_global(callback: Function): Pusher {\n    this.global_emitter.bind_global(callback);\n    return this;\n  }\n\n  unbind_global(callback?: Function): Pusher {\n    this.global_emitter.unbind_global(callback);\n    return this;\n  }\n\n  unbind_all(callback?: Function): Pusher {\n    this.global_emitter.unbind_all();\n    return this;\n  }\n\n  subscribeAll() {\n    var channelName;\n    for (channelName in this.channels.channels) {\n      if (this.channels.channels.hasOwnProperty(channelName)) {\n        this.subscribe(channelName);\n      }\n    }\n  }\n\n  subscribe(channel_name: string) {\n    var channel = this.channels.add(channel_name, this);\n    if (channel.subscriptionPending && channel.subscriptionCancelled) {\n      channel.reinstateSubscription();\n    } else if (\n      !channel.subscriptionPending &&\n      this.connection.state === 'connected'\n    ) {\n      channel.subscribe();\n    }\n    return channel;\n  }\n\n  unsubscribe(channel_name: string) {\n    var channel = this.channels.find(channel_name);\n    if (channel && channel.subscriptionPending) {\n      channel.cancelSubscription();\n    } else {\n      channel = this.channels.remove(channel_name);\n      if (channel && channel.subscribed) {\n        channel.unsubscribe();\n      }\n    }\n  }\n\n  send_event(event_name: string, data: any, channel?: string) {\n    return this.connection.send_event(event_name, data, channel);\n  }\n\n  shouldUseTLS(): boolean {\n    return this.config.useTLS;\n  }\n\n  signin() {\n    this.signin_requested = true;\n    this._signin();\n  }\n\n  _signin() {\n    if (!this.signin_requested) {\n      return;\n    }\n\n    if (this.connection.state !== 'connected') {\n      return;\n    }\n\n    const onAuthorize: UserAuthenticationCallback = (err, authData: UserAuthenticationData) => {\n      if (err) {\n        Logger.warn(`Error during signin: ${err}`);\n        return;\n      }\n\n      this.send_event('pusher:signin', {\n        auth: authData.auth,\n        user_data: authData.user_data\n      });\n\n      // Later when we get pusher:singin_success event, the user will be marked as signed in\n    };\n\n    this.config.userAuthenticator(\n      {\n        socketId: this.connection.socket_id\n      },\n      onAuthorize\n    );\n  }\n}\n\nfunction checkAppKey(key) {\n  if (key === null || key === undefined) {\n    throw 'You must pass your app key when you instantiate Pusher.';\n  }\n}\n\nRuntime.setup(Pusher);\n"],"sourceRoot":""}